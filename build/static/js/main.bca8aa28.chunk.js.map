{"version":3,"sources":["components/BackgroundImage/index.js","components/SplashBanner/index.js","pages/Splash.js","pages/MainMenu.js","components/Grid/index.js","components/HamburgerMenu/index.js","components/CustomLineBreak/index.js","components/CustomLineBreak2/index.js","components/HelloUserAndSignOut/index.js","utils/API.js","pages/CalorieEntry.js","pages/CalorieEntryEdit.js","pages/CalorieData.js","components/YelpGoogleApi/index.js","pages/StoreFinder.js","components/RecipeFinder/RecForm.js","components/RecipeFinder/NuTable.js","components/RecipeFinder/Recipe.js","components/RecipeFinder/Recipes.js","pages/RecipeFinder.js","pages/HealthTimeline.js","components/Card/index.js","components/CardWrapper/index.js","components/HealthCardNavBar/index.js","components/HealthCardFooter/index.js","pages/HealthCardPreview.js","pages/HealthCard.js","components/Resources/ImgCarousel.js","components/Resources/ImgCarousel1.js","components/Resources/diabetesData.js","components/Resources/Resources.js","pages/Resources.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["BackgroundImage","react_default","a","createElement","className","src","alt","SplashBanner","Splash","components_BackgroundImage","components_SplashBanner","class","href","React","Component","MainMenu","Container","_ref","children","Row","_ref2","Col","_ref3","size","HamburgerMenu","openNav","document","getElementById","style","height","closeNav","id","onClick","this","Br","Br2","userName","localStorage","getItem","HelloUserAndSignOut","signOut","window","open","API","saveInfo","Data","axios","post","getInfo","userQuery","get","params","Object","objectSpread","editInfo","put","deleteInfo","delete","saveMedId","data","setItem","CalorieEntry","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openNutritionnixURL","handleInfoSave","event","then","res","setState","didSubmit","catch","err","console","log","parseCalorie","foodName","str1","leftP","indexOf","rightP","part1","substr","validateFormData","dateInput","state","startDate","mealCategory","value","mealNameCaloriesPerSingleQuantity","mealQuantity","parseFloat","trim","drinkNameCaloriesPerGlass","drinkQuantity","ingredientNameCaloriesPerGram","ingredientGrams","manualEntryName","manualEntryCalories","notesInput","isNaN","innerText","strMealName","strQty","strCal","sectionNumber","username","date","mealtype","sectionno","mealname","qty","unitcal","comments","scrollTo","Date","handleChange","bind","assertThisInitialized","components_HelloUserAndSignOut","CustomLineBreak","es","dateFormat","selected","onChange","type","placeholder","autoComplete","CustomLineBreak2","autcomplete","rows","components_HamburgerMenu","CalorieEntryEdit","handleInfoEdit","result","_id","history","push","location","calorieInfo","userDateObj","getMonth","getDate","getFullYear","month","year","userData","userDate","CalorieData","loadInfo","userInfo","totalCalculator","newTot","i","length","totalCal","handleInfoRemove","_this2","map","key","substring","Link","to","pathname","target","storetype","yelpApiCall","yelp_params","callback","require","concat","headers","Authorization","categories","businesses","Map","stores","city","handleMarkerToggleWindowOpen","yelpStoreTypes","handleInputChange","cancelable","persist","preventDefault","handleFormSubmit","yelp","markerId","handleMarkerToggleWindowClose","CMap","withScriptjs","withGoogleMap","lib","defaultZoom","defaultCenter","lat","lng","defaultOptions","disableDefaultUI","coordinates","_this3","restaurant","autocomplete","name","mdbreact_esm","caret","color","basic","onClickHandler","Button_default","variant","react","googleMapURL","loadingElement","containerElement","width","mapElement","center","slice","position","latitude","longitude","onCloseClick","Card","Img","image_url","rating","phone","rel","url","defaultProps","StoreFinder","YelpGoogleApi","RecForm","onSubmit","getRecipe","receipeName","required","autoFocus","maxLength","onInput","object","calorie","NuTable","recipe","es_Card","undefined","totalNutrients","FAT","quantity","toFixed","CHOLE","SUGAR","PROCNT","FIBTG","Recipe","calories","yeild","yield","calCalories","image","source","label","ingredientLines","ingredient","RecipeFinder_NuTable","Recipes","recipes","RecipeFinder_Recipe","config","app_id","process","app_key","RecipeFinder","_event$target","defineProperty","asyncToGenerator","regenerator_default","mark","_callee","e","api_call","wrap","_context","prev","next","fetch","recipeName","sent","json","hits","ele","message","stop","_x","apply","arguments","_this$state","RecipeFinder_RecForm","RecipeFinder_Recipes","HealthTimeline","gender","currentAge","currentWeight","currentHeightFt","currentHeightIn","currentDiet","currentExerciseFrequency","userBMI","messageBMI","lifeExpectancy","calculateBMI","weight","userDiet","parseInt","userExercise","display","_this$state2","userHeight","currentHeight","userWeight","innerHTML","pattern","maxlength","background","bottom","left","right","CardWrapper","HealthCardNavBar","HealthCardFooter","HealthCardPreview","CardWrapper_CardWrapper","Card_Card","components_HealthCardNavBar","DOB","address","emergencyContact","emergencyContactPhone","healthInsuranceProvider","healthInsuranceProviderPhone","policyNo","primaryCarePhysician","primaryCarePhysicianPhone","knownConditions","knownAllergens","medications","bloodType","organDonor","doNotResuscitate","components_HealthCardFooter","HealthCard","saveHealthCard","previewHealthCard","showPreview","contactname","contactphone","primarycarephysician","medicalconditions","medication","allergies","bloodtype","resuscitate","organdonor","pages_HealthCardPreview","items","altText","diaTypes","header","description","preWay","title","img","Symptoms","symptom","Resource","es_Container","CardBody","CardTitle","CardText","sym","dataType","prevention","Resources","Resources_Resources","Contact","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bca8aa28.chunk.js","sourcesContent":["import React from 'react'\nimport \"./backgroundImage.css\";\n\nconst BackgroundImage = () => {\n    return (\n        <div>\n            <img className=\"backgroundImage\" src={\"./assets/images/Splash_Images/sRGB_PhotoshopQuality8/sRGB_2400pxHigh_CuttingBoard.jpg\"} alt={\"Background Image\"} />\n        </div>\n    );\n};\n\nexport default BackgroundImage;","import React from 'react'\nimport \"./splashBanner.css\";\n\nconst SplashBanner = () => {\n    return (\n        <div className=\"splashMiddleBanner\">\n            <p className=\"splashTitle\">DiaBeatIt</p>\n            <p className=\"splashDescription\">An app that helps prevent diabetes\n                                                <br></br>\n                                                through healthy eating\n            </p>\n        </div>\n    );\n};\n\nexport default SplashBanner;","import React from \"react\";\nimport \"../components/Buttons/buttons.css\";\nimport \"../components/Text/text.css\";\nimport \"../components/InputAndSelectField/inputAndSelectField.css\";\nimport \"../components/PageWrapper/pageWrapper.css\";\nimport \"../components/MainContentContainer/mainContentContainer.css\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport SplashBanner from \"../components/SplashBanner\";\n\n// Run \"npm start\" to start React app.\n// Run \"npm i\" or \"npm i [specific component name]\" in the command line if there are any dependencies missing in the node modules folder.\n\nclass Splash extends React.Component {\n  \n    render() {\n        return(\n        <div>\n\n            {/* ---------------------------------------- */}\n            {/* MAIN CONTENT OF PAGE */}\n\n            <BackgroundImage />\n\n            <SplashBanner />\n\n            <div class=\"splashButtonsContainer\">\n                {/* <a href=\"MainMenu\"><button class=\"button2\">Sign up</button></a>\n                <a href=\"MainMenu\"><button class=\"button2\">Login</button></a> */}\n                <a href=\"MainMenu\"><button class=\"button2\">Get started</button></a>\n            </div>\n            \n            \n\n        </div>\n        )\n    }\n}\n\nexport default Splash;","import React, { Component } from \"react\";\nimport \"../components/MainMenu/mainMenu.css\";\n\n// Run \"npm start\" to start React app.\n// Run \"npm i\" or \"npm i [specific component name]\" in the command line if there are any dependencies missing in the node modules folder.\n\nclass MainMenu extends React.Component {\n\n  render() {\n    return(\n      <div>\n\n        {/* MAIN MENU */}\n        <div className=\"backgroundColor\">\n          <a className=\"mainMenuAnchor\" href=\"CalorieEntry\">Calorie Entry</a>\n          <a className=\"mainMenuAnchor\" href=\"CalorieData\">Calorie Data</a>\n          <a className=\"mainMenuAnchor\" href=\"StoreFinder\">Store Finder</a>\n          <a className=\"mainMenuAnchor\" href=\"RecipeFinder\">Recipe Finder</a>\n          <a className=\"mainMenuAnchor\" href=\"HealthTimeline\">Health Timeline</a>\n          <a className=\"mainMenuAnchor\" href=\"HealthCard\">Digital Health Card</a>\n          <a className=\"mainMenuAnchor\" href=\"Resources\">Resources</a>\n          <a className=\"mainMenuAnchor\" href=\"Contact\">Contact</a>\n          <a className=\"mainMenuAnchor\" href=\"/\">Back To Home</a>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default MainMenu;","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ children }) {\n  return <div className=\"container\">{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ children }) {\n  return <div className=\"row\">{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"col-md-6 offset-md-3\"> instead of <div className=\"col-md-6 offset-md-3\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./hamburgerMenu.css\";\n\nclass HamburgerMenu extends React.Component {\n\n  // --------------------\n  \n  // The code below slides in the overlay navigation menu downwards from the top (0 to 100% height), when it is triggered:\n\n  // Open when someone clicks on the span element\n  openNav = () => {\n    document.getElementById(\"myNav\").style.height = \"100%\";\n  }\n    \n  // Close when someone clicks on the \"x\" symbol inside the overlay\n  closeNav = () => {\n    document.getElementById(\"myNav\").style.height = \"0%\";\n  }\n\n  // --------------------\n\n  render() {\n    return(\n      <div>\n        {/* HAMBURGER MENU */}\n\n        {/* The Overlay */}\n        <div id=\"myNav\" className=\"overlay\">\n\n          {/* Button to close the overlay navigation */}\n          <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={this.closeNav}>&times;</a> \n          {/* &times; is the icon for X */}\n\n          {/* Overlay content */}\n          <div className=\"overlay-content\">\n            {/* <span className=\"nonActiveButton\">Calorie Entry</span> */}\n            <a href=\"CalorieEntry\">Calorie Entry</a>\n            <a href=\"CalorieData\">Calorie Data</a>\n            <a href=\"StoreFinder\">Store Finder</a>\n            <a href=\"RecipeFinder\">Recipe Finder</a>\n            <a href=\"HealthTimeline\">Health Timeline</a>\n            <a href=\"HealthCard\">Digital Health Card</a>\n            <a href=\"Resources\">Resources</a>\n            <a href=\"Contact\">Contact</a>\n            <a href=\"/\">Back To Home</a>\n          </div>\n\n        </div>\n\n        {/* Top Bar and Branding Text */}\n        <div className=\"topBar\">\n          {/* <span class=\"branding\">Branding</span> */}\n          <a className=\"branding\" href=\"MainMenu\">DiaBeatIt</a>\n        </div>\n\n        {/* Hamburger Menu */}\n        <div className=\"topnav\">\n\n        {/* Hamburger icon */}\n        <a href=\"javascript:void(0);\" className=\"icon\" onClick={this.openNav}>&#9776;</a> \n        {/* &#9776; is the hamburger icon */}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HamburgerMenu;\n","import React from \"react\";\nimport \"./customLineBreak.css\";\n\nclass Br extends React.Component {\n\n  render() {\n    return(\n      <div>\n        <div className=\"customLineBreak\"></div>\n      </div>\n    )\n  }\n}\n\nexport default Br;","import React from \"react\";\nimport \"./customLineBreak2.css\";\n\nclass Br2 extends React.Component {\n\n  render() {\n    return(\n      <div>\n        <div className=\"customLineBreak2\"></div>\n      </div>\n    )\n  }\n}\n\nexport default Br2;","import React from \"react\";\nimport \"./helloUserAndSignOut.css\";\n\nvar userName = localStorage.getItem(\"username\");\n\nclass HelloUserAndSignOut extends React.Component {\n\n  signOut = () => {\n    window.open(\"https://www.google.com\");\n  }\n\n  render() {\n    return(\n      <div>             \n        <div className=\"helloUserTxt\">Hello <span className=\"userFirstName\">{userName}</span>!</div>\n        {/* <div className=\"signOutContainer\"><span className=\"signOutAnchor\" onClick={this.signOut}>Sign Out</span></div> */}\n      </div>   \n    )\n  }\n}\n\nexport default HelloUserAndSignOut;","import axios from \"axios\";\n\nexport default {\n  // Saves calorie info to the database\n  saveInfo: function(Data) {\n    return axios.post(\"/api/calorie\", Data); \n  },\n\n  // Gets  calorie info that matches the search\n  getInfo: function(userQuery) {\n    return axios.get(\"/api/calorie/\", {\n      params: {...userQuery}      \n    } );\n  },\n  \n  // Edits the book with the given id\n  editInfo: function(userQuery) {\n    return axios.put(\"/api/calorie/\" + userQuery.id, userQuery);\n  },\n\n  // Deletes the book with the given id\n  deleteInfo: function(id) {\n    return axios.delete(\"/api/calorie/\" + id);\n  },\n\n  // Saves the medical ID \n  saveMedId: function(data) {\n    // console.log(axios.post(data));\n    var medId = axios.post(\"/api/healthcard\", data);\n    if (medId === null) {\n      return axios.post(\"/api/healthcard\", data)\n    } else {\n      return axios.put(\"/api/healthcard\", data)\n    }\n  }\n};\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport HamburgerMenu from \"../components/HamburgerMenu\";\nimport Br from \"../components/CustomLineBreak\";\nimport Br2 from \"../components/CustomLineBreak2\";\nimport \"../components/Buttons/buttons.css\";\nimport \"../components/Text/text.css\";\nimport HelloUserAndSignOut from \"../components/HelloUserAndSignOut\";\nimport \"../components/InputAndSelectField/inputAndSelectField.css\";\nimport \"../components/PageWrapper/pageWrapper.css\";\nimport \"../components/MainContentContainer/mainContentContainer.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../components/CustomReactDatepicker/customReactDatepicker.css\";\nimport API from \"../utils/API\";\n\n// Run \"npm start\" to start React app.\n// Run \"npm i\" or \"npm i [specific component name]\" in the command line if there are any dependencies missing in the node modules folder.\n\n// grabbing username from cookies\nlocalStorage.setItem(\"username\", \"Guest User\");   // delete this line in production\nvar userName = localStorage.getItem(\"username\");\n\nclass CalorieEntry extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          startDate: new Date(),\n          didSubmit: \"No\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n     \n    // For React Datepicker\n    handleChange(date) {\n        this.setState({\n            startDate: date\n        });\n    }\n\n    // Function to open Nutritionnix URL\n    openNutritionnixURL = () => {\n        window.open(\"https://www.nutritionix.com/uk/database/common-foods\");\n    }\n\n    // This function will call the post route\n    handleInfoSave = event => {\n        API.saveInfo(event)\n          .then(res => this.setState({didSubmit:\"Yes\"}))\n          .catch(err => console.log(err));\n      }\n\n    // Function to extract numeric-calorie-amount inside the parenthesis () from the name of the food\n    parseCalorie = (foodName) => {\n        var str1 = foodName;\n        var leftP = str1.indexOf( \"(\" )+1;\n        var rightP = str1.indexOf( \")\" );\n        var part1 = str1.substr(leftP, rightP-leftP);\n        rightP = part1.indexOf( \"c\" )-1;\n        var part2 = part1.substr(0, rightP)\n\n        return part2\n    }\n\n    // Function to validate form data\n    validateFormData = () => {\n        \n        var dateInput = this.state.startDate;                                                        \n        var mealCategory = document.getElementById(\"calorieEntryPage-mealCategory\").value;\n        var mealNameCaloriesPerSingleQuantity = document.getElementById(\"calorieEntryPage-mealNameCaloriesPerSingleQuantity\").value;\n        var mealQuantity = parseFloat(document.getElementById(\"calorieEntryPage-mealQuantity\").value.trim());\n        var drinkNameCaloriesPerGlass = document.getElementById(\"calorieEntryPage-drinkNameCaloriesPerGlass\").value.trim();\n        var drinkQuantity = parseFloat(document.getElementById(\"calorieEntryPage-drinkQuantity\").value.trim());\n        var ingredientNameCaloriesPerGram = document.getElementById(\"calorieEntryPage-ingredientNameCaloriesPerGram\").value;\n        var ingredientGrams = parseFloat(document.getElementById(\"calorieEntryPage-ingredientGrams\").value.trim());\n        var manualEntryName = document.getElementById(\"calorieEntryPage-manualEntryName\").value.trim();\n        var manualEntryCalories = parseFloat(document.getElementById(\"calorieEntryPage-manualEntryCalories\").value.trim());\n        var notesInput = document.getElementById(\"calorieEntryPage-notes\").value.trim();\n        \n        // Validation - Section 2\n        if (mealCategory === \"0\") {\n        document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please select meal category.\";\n        return;\n        }\n        // --------------------\n        // Validation - Section 3\n        // Section 3 - checking to see that question 1 for Part A, B, C, D are not all empty\n        else if ((mealNameCaloriesPerSingleQuantity === \"0\") && (drinkNameCaloriesPerGlass === \"0\") && (ingredientNameCaloriesPerGram === \"0\") && (manualEntryName === \"\")) {\n        document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out section 3.\";\n        return;\n        }\n        // Section 3 - checking to see if question 1 has been filled out for other parts besides Part A\n        else if ((mealNameCaloriesPerSingleQuantity !== \"0\") && (drinkNameCaloriesPerGlass !== \"0\")) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if ((mealNameCaloriesPerSingleQuantity !== \"0\") && (ingredientNameCaloriesPerGram !== \"0\")) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if ((mealNameCaloriesPerSingleQuantity !== \"0\") && (manualEntryName !== \"\")) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // Section 3 - checking to see if question 1 has been filled out for other parts besides Part B  \n        else if ((drinkNameCaloriesPerGlass !== \"0\") && (ingredientNameCaloriesPerGram !== \"0\")) {\n        document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if ((drinkNameCaloriesPerGlass !== \"0\") && (manualEntryName !== \"\")) {\n        document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // Section 3 - checking to see if question 1 has been filled out for other parts besides Part C\n        else if ((ingredientNameCaloriesPerGram !== \"0\") && (manualEntryName !== \"\")) {\n        document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // --------------------\n        // Validation - Section 3  \n        // Section 3 - checking to see if Part A question 2 is a number\n        else if ( \n                (mealNameCaloriesPerSingleQuantity !== \"0\") && \n                (drinkNameCaloriesPerGlass === \"0\") && (ingredientNameCaloriesPerGram === \"0\") && (manualEntryName === \"\") &&\n                (isNaN(mealQuantity))\n                ) {\n                document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out quantity for section 3 part A.\";\n                return;\n        }\n        // Section 3 - checking to see if Part B question 2 is a number\n        else if ( \n                (drinkNameCaloriesPerGlass !== \"0\") && \n                (mealNameCaloriesPerSingleQuantity === \"0\") && (ingredientNameCaloriesPerGram === \"0\") && (manualEntryName === \"\") &&\n                (isNaN(drinkQuantity))\n                ) {\n                document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out quantity for section 3 part B.\";\n                return;\n        }\n        // Section 3 - checking to see if Part C question 2 is a number\n        else if ( \n                (ingredientNameCaloriesPerGram !== \"0\") && \n                (mealNameCaloriesPerSingleQuantity === \"0\") && (drinkNameCaloriesPerGlass === \"0\") && (manualEntryName === \"\") &&\n                (isNaN(ingredientGrams))\n                ) {\n                document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out number of grams for section 3 part C.\";\n                return;\n        }\n        // Section 3 - checking to see if Part D question 2 is a number\n        else if ( \n                (manualEntryName !== \"\") && \n                (mealNameCaloriesPerSingleQuantity === \"0\") && (drinkNameCaloriesPerGlass === \"0\") && (ingredientNameCaloriesPerGram === \"0\") &&\n                (isNaN(manualEntryCalories))\n                ) {\n                document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out number of calories for section 3 part D.\";\n                return;\n        }\n        // --------------------\n        // Validation - Section 3  \n        // Section 3 - checking to see if question 2 has been filled out for other parts besides Part A\n        else if (((mealNameCaloriesPerSingleQuantity !== \"0\") && (mealQuantity > 0)) && drinkQuantity > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((mealNameCaloriesPerSingleQuantity !== \"0\") && (mealQuantity > 0)) && ingredientGrams > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((mealNameCaloriesPerSingleQuantity !== \"0\") && (mealQuantity > 0)) && manualEntryCalories > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // Section 3 - checking to see if question 2 has been filled out for other parts besides Part B\n        else if (((drinkNameCaloriesPerGlass !== \"0\") && (drinkQuantity > 0)) && mealQuantity > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((drinkNameCaloriesPerGlass !== \"0\") && (drinkQuantity > 0)) && ingredientGrams > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((drinkNameCaloriesPerGlass !== \"0\") && (drinkQuantity > 0)) && manualEntryCalories > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // Section 3 - checking to see if question 2 has been filled out for other parts besides Part C\n        else if (((ingredientNameCaloriesPerGram !== \"0\") && (ingredientGrams > 0)) && mealQuantity > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((ingredientNameCaloriesPerGram !== \"0\") && (ingredientGrams > 0)) && drinkQuantity > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((ingredientNameCaloriesPerGram !== \"0\") && (ingredientGrams > 0)) && manualEntryCalories > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // Section 3 - checking to see if question 2 has been filled out for other parts besides Part D\n        else if (((manualEntryName !== \"0\") && (manualEntryCalories > 0)) && mealQuantity > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((manualEntryName !== \"0\") && (manualEntryCalories > 0)) && drinkQuantity > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((manualEntryName !== \"0\") && (manualEntryCalories > 0)) && ingredientGrams > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // The following else statement is creating a data object and empties the error-message field once it passes all validation\n        else {\n            //section #, mealname, qty, cal\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"\";\n            var strMealName;\n            var strQty;\n            var strCal;\n\n            // Section A information\n            if (mealNameCaloriesPerSingleQuantity.trim()!=\"\" && mealNameCaloriesPerSingleQuantity.trim()!=0){\n                var sectionNumber = \"A\";\n                strMealName = mealNameCaloriesPerSingleQuantity;\n                strQty = mealQuantity;\n                strCal = this.parseCalorie(strMealName);\n            // Section B information\n            } else if (drinkNameCaloriesPerGlass.trim()!=\"\" && drinkNameCaloriesPerGlass.trim()!=0){\n                var sectionNumber = \"B\";\n                strMealName = drinkNameCaloriesPerGlass;\n                strQty = drinkQuantity;\n                strCal = this.parseCalorie(strMealName);\n            // Section C information\n            } else if (ingredientNameCaloriesPerGram.trim()!=\"\" && ingredientNameCaloriesPerGram.trim()!=0){\n                var sectionNumber = \"C\";\n                strMealName = ingredientNameCaloriesPerGram;\n                strQty = ingredientGrams;\n                strCal = this.parseCalorie(strMealName);\n            // Section D information\n            } else if (manualEntryName.trim()!=\"\"){\n                var sectionNumber = \"D\";\n                strMealName = manualEntryName;\n                strQty = 1;\n                strCal = manualEntryCalories;\n            }\n\n            var data = {      \n                username: userName,\n                date: dateInput,\n                mealtype: mealCategory,\n                sectionno: sectionNumber,\n                mealname: strMealName,\n                qty:parseFloat(strQty),\n                unitcal: parseFloat(strCal),\n                comments: notesInput\n            };\n\n            // Calling the post method\n            this.handleInfoSave(data);\n\n            // Clear the form when submitting and show a success message\n            document.getElementById(\"calorieEntryPage-mealCategory\").value = \"0\";\n            document.getElementById(\"calorieEntryPage-mealNameCaloriesPerSingleQuantity\").value = \"0\";\n            document.getElementById(\"calorieEntryPage-mealQuantity\").value = \"\";\n            document.getElementById(\"calorieEntryPage-drinkNameCaloriesPerGlass\").value = \"0\";\n            document.getElementById(\"calorieEntryPage-drinkQuantity\").value = \"\";\n            document.getElementById(\"calorieEntryPage-ingredientNameCaloriesPerGram\").value = \"0\";\n            document.getElementById(\"calorieEntryPage-ingredientGrams\").value = \"\";\n            document.getElementById(\"calorieEntryPage-manualEntryName\").value = \"\";\n            document.getElementById(\"calorieEntryPage-manualEntryCalories\").value = \"\";\n            document.getElementById(\"calorieEntryPage-notes\").value = \"\";\n\n            // Scroll back to top of page\n            window.scrollTo(0, 0);\n            }\n    }\n\n    render() {\n        return(\n        <div>\n\n            {/* ---------------------------------------- */}\n            {/* MAIN CONTENT OF PAGE */}\n\n            {/* Page Wrapper */}\n            <div className=\"pageWrapper\">\n\n                {/* Hello user first name text and sign out anchor */}\n                <HelloUserAndSignOut />\n\n                {/* Page header */}\n                <div className=\"pageHeader\">Calorie Entry</div>\n            \n                {/* Main content container */}\n                <div className=\"mainContentContainer\">\n\n                    {/* BOOTSTRAP GRID */}\n                    {/* Max width 960px container */}\n                    {/* Put any bootstrap elements into class=\"container\" to set max width to 960px and have it centered on page */}\n                    <Container>         \n                        \n                        {/* Calorie entry form */}\n                        <Row>\n\n                            <Col size=\"col-md-6 offset-md-3\">           \n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <p className=\"sectionTitle\">Enter data:</p>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n\n                                {/* ------------------------------ */}\n                                {/* Subrow (FORM SECTION 1) */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">1.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">  \n                                        <p className=\"mainContentTextBlack\">Please select date:</p>                             \n                                        {/* Datepicker */}\n                                        <div id=\"calorieEntryPage-datepicker\">\n                                            <DatePicker\n                                            dateFormat=\"yyyy/MM/dd\"\n                                            selected={this.state.startDate}\n                                            onChange={this.handleChange}\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Br />\n\n                                {/* <hr class=\"horizontalRuleGray\"></hr> */}\n                                <hr className=\"horizontalRuleBlue\"></hr>\n                                {/* <hr class=\"horizontalRuleYellow\"></hr> */}\n                                \n                                {/* ------------------------------ */}\n                                {/* Subrow (FORM SECTION 2) */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">2.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Please select meal category:</p>\n                                        <select className=\"chosen-select dropDownMenu1\" id=\"calorieEntryPage-mealCategory\">\n                                            <option value=\"0\"></option>\n                                            <option value=\"01 Breakfast\">Breakfast</option>\n                                            <option value=\"02 Morning snack\">Morning snack</option>\n                                            <option value=\"03 Lunch\">Lunch</option>\n                                            <option value=\"04 Afternoon snack\">Afternoon snack</option>\n                                            <option value=\"05 Dinner\">Dinner</option>\n                                            <option value=\"06 Other snack\">Other snack</option>\n                                        </select>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                {/* <hr class=\"horizontalRuleGray\"></hr> */}\n                                <hr className=\"horizontalRuleBlue\"></hr>\n                                {/* <hr class=\"horizontalRuleYellow\"></hr> */}\n\n                                {/* ------------------------------ */}\n                                {/* Subrow (FORM SECTION 3) */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">3.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Please enter <span className=\"mainContentTextRed\">ONE</span> of the following parts:</p>\n                                        <p className=\"mainContentTextRed\">(fill out either part A, B, C or D only)</p>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">A.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Select from meal list:</p>\n                                        <select className=\"chosen-select dropDownMenu1\" id=\"calorieEntryPage-mealNameCaloriesPerSingleQuantity\">\n                                            {/* IN ALPHABETICAL ORDER */}\n                                            {/* \n                                            For the value attribute, REMEMBER TO ONLY ENTER NUMERALS FOR THE CALORIE PART and not any other part. \n                                            For example a Chobani simply 100 yogurt should be entered as \n                                            \"Chobani simply one hundred yogurt (100 cal)\" and NOT: \"Chobani simply 100 yogurt (100 cal)\" \n                                            */}\n                                            <option value=\"0\"></option>\n                                            <option value=\"Hamburger (540 cal)\">Hamburger (540 cal)</option>\n                                            <option value=\"Salad - plain (20 cal)\">Salad - plain (20 cal)</option>\n                                            <option value=\"Salad - with dressing (148 cal)\">Salad - w/ dressing (148 cal)</option>\n                                            <option value=\"Steak - beef (614 cal)\">Steak - beef (614 cal)</option>\n                                            <option value=\"Steak - tuna (184 cal)\">Steak - tuna (184 cal)</option>\n                                        </select>\n                                        <Br />\n                                        <input type=\"number\" className=\"form-control\" id=\"calorieEntryPage-mealQuantity\" placeholder=\"Quantity\" autoComplete=\"off\"></input>  \n                                        {/* In the above line, set input type to be \"number\" instead of \"text\". This will force the user\n                                            to only be able to enter numbers into the input field on the front end. Note, that the numbers\n                                            will still capture as a string, so this string still has to be parseFloat on the backend */}\n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                    </Col>\n                                </Row>\n                                \n                                <Br />\n                                <Br />\n                                <Br />\n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">B.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Select from drink list:</p>\n                                        <select className=\"chosen-select dropDownMenu1\" id=\"calorieEntryPage-drinkNameCaloriesPerGlass\">\n                                            {/* IN ALPHABETICAL ORDER */}\n                                            {/*                                         \n                                            For the value attribute, REMEMBER TO ONLY ENTER NUMERALS FOR THE CALORIE PART and not any other part. \n                                            For example a Chobani simply 100 yogurt should be entered as \n                                            \"Chobani simply one hundred yogurt (100 cal)\" and NOT: \"Chobani simply 100 yogurt (100 cal)\"\n                                            */}\n                                            <option value=\"0\"></option>\n                                            <option value=\"Beer - can (153 cal)\">Beer - can (153 cal)</option>\n                                            <option value=\"Wine - red, glass (125 cal)\">Wine - red, glass (125 cal)</option>\n                                            <option value=\"Wine - white, glass (121 cal)\">Wine - white, glass (121 cal)</option>\n                                            <option value=\"Soda - Cola, can (140 cal)\">Soda - Cola, can (140 cal)</option>\n                                        </select>\n                                        <Br />\n                                        <input type=\"number\" className=\"form-control\" id=\"calorieEntryPage-drinkQuantity\" placeholder=\"Quantity\" autoComplete=\"off\"></input>   \n                                        {/* In the above line, set input type to be \"number\" instead of \"text\". This will force the user\n                                            to only be able to enter numbers into the input field on the front end. Note, that the numbers\n                                            will still capture as a string, so this string still has to be parseFloat on the backend */}\n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                <Br />\n                                <Br />\n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">C.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Select from ingredient list:</p>\n                                        <select className=\"chosen-select dropDownMenu1\" id=\"calorieEntryPage-ingredientNameCaloriesPerGram\">\n                                            {/* IN ALPHABETICAL ORDER */}\n                                            {/*                                          \n                                            For the value attribute, REMEMBER TO ONLY ENTER NUMERALS FOR THE CALORIE PART and not any other part. \n                                            For example a Chobani simply 100 yogurt should be entered as \n                                            \"Chobani simply one hundred yogurt (100 cal)\" and NOT: \"Chobani simply 100 yogurt (100 cal)\"\n                                            */}\n                                            <option value=\"0\"></option>\n                                            <option value=\"Carrot (0.3 cal/g)\">Carrot (0.3 cal/g)</option>\n                                            <option value=\"Onion (0.4 cal/g)\">Onion (0.4 cal/g)</option>\n                                            <option value=\"Spinach (0.2 cal/g)\">Spinach (0.2 cal/g)</option>\n                                        </select>\n                                        <Br />\n                                        <input type=\"number\" className=\"form-control\" id=\"calorieEntryPage-ingredientGrams\" placeholder=\"Grams\" autoComplete=\"off\"></input>    \n                                        {/* In the above line, set input type to be \"number\" instead of \"text\". This will force the user\n                                            to only be able to enter numbers into the input field on the front end. Note, that the numbers\n                                            will still capture as a string, so this string still has to be parseFloat on the backend */}\n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                <Br />\n                                <Br />\n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">D.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Manual entry of meal / drink / ingredient:</p>\n                                        <p className=\"anchor1\" onClick={this.openNutritionnixURL}>Click here to look up calories</p>\n                                        <Br2 />\n                                    </Col>\n                                </Row>\n                                \n                                <Row>\n                                    <Col size=\"col-md-1\"></Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <input type=\"text\" className=\"form-control\" id=\"calorieEntryPage-manualEntryName\" placeholder=\"Name of meal / drink / ingredient\" autcomplete=\"off\"></input>   \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <input type=\"number\" className=\"form-control\" id=\"calorieEntryPage-manualEntryCalories\" placeholder=\"Calories\" autoComplete=\"off\"></input>     \n                                        {/* In the above line, set input type to be \"number\" instead of \"text\". This will force the user\n                                            to only be able to enter numbers into the input field on the front end. Note, that the numbers\n                                            will still capture as a string, so this string still has to be parseFloat on the backend */}\n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                {/* <hr class=\"horizontalRuleGray\"></hr> */}\n                                <hr className=\"horizontalRuleBlue\"></hr>\n                                {/* <hr class=\"horizontalRuleYellow\"></hr> */}\n\n                                {/* ------------------------------ */}\n                                {/* Subrow (FORM SECTION 4) */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">4.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Please enter any additional notes (optional):</p>\n                                        <textarea className=\"form-control\" id=\"calorieEntryPage-notes\" placeholder=\"\" rows=\"4\" autoComplete=\"off\"></textarea>       \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                    </Col>\n                                </Row> \n                                \n                                <Br />\n                                {/* <hr class=\"horizontalRuleGray\"></hr> */}\n                                <hr className=\"horizontalRuleBlue\"></hr>\n                                {/* <hr class=\"horizontalRuleYellow\"></hr> */}\n\n                                {/* ------------------------------ */}\n                                {/* Subrow (FORM SECTION 4) */}\n                                <Row>\n                                    <Col size=\"col-md-1\"></Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <button className=\"button1\" id=\"calorieEntryPageSubmitButton\" onClick={this.validateFormData}>Submit</button>\n                                        <div className=\"mainContentTextRed\" id=\"calorieEntryPage-errorMessage\"></div>\n                                        <div className=\"mainContentTextBlue\" id=\"calorieEntryPage-successMessage\"></div>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                <Br />\n                                <Br />\n\n                            </Col>\n\n                        </Row>\n\n                    </Container>\n\n            </div>\n\n            </div>\n\n\n            {/* ---------------------------------------- */}\n            {/* HAMBURGER MENU */}\n\n            <HamburgerMenu />\n\n        </div>\n        )\n    }\n}\n\nexport default CalorieEntry;","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport HamburgerMenu from \"../components/HamburgerMenu\";\nimport Br from \"../components/CustomLineBreak\";\nimport Br2 from \"../components/CustomLineBreak2\";\nimport \"../components/Buttons/buttons.css\";\nimport \"../components/Text/text.css\";\nimport HelloUserAndSignOut from \"../components/HelloUserAndSignOut\";\nimport \"../components/InputAndSelectField/inputAndSelectField.css\";\nimport \"../components/PageWrapper/pageWrapper.css\";\nimport \"../components/MainContentContainer/mainContentContainer.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../components/CustomReactDatepicker/customReactDatepicker.css\";\nimport API from \"../utils/API\";\n\n// Run \"npm start\" to start React app.\n// Run \"npm i\" or \"npm i [specific component name]\" in the command line if there are any dependencies missing in the node modules folder.\n\nclass CalorieEntryEdit extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          result: props.location.calorieInfo,\n          startDate: new Date(),\n          didSubmit: \"No\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n     \n    // For React Datepicker\n    handleChange(date) {\n        this.setState({\n            startDate: date\n        });\n    }\n\n    // populating the form with default values\n    componentDidMount() {\n        const userDateObj = new Date(this.state.result.date);\n        const [month, date, year] = [ userDateObj.getMonth(), userDateObj.getDate(), userDateObj.getFullYear()]; \n        this.setState({\n            startDate: new Date(year, month, date)\n        })\n        document.getElementById(\"calorieEntryPage-datepicker\").value = this.state.startDate;\n        document.getElementById(\"calorieEntryPage-mealCategory\").value = this.state.result.mealtype;\n        document.getElementById(\"calorieEntryPage-notes\").value = this.state.result.comments;\n        if (this.state.result.sectionno === \"A\") {\n            document.getElementById(\"calorieEntryPage-mealNameCaloriesPerSingleQuantity\").value = this.state.result.mealname;\n            document.getElementById(\"calorieEntryPage-mealQuantity\").value = this.state.result.qty;\n        } else if (this.state.result.sectionno === \"B\") {\n            document.getElementById(\"calorieEntryPage-drinkNameCaloriesPerGlass\").value = this.state.result.mealname;\n            document.getElementById(\"calorieEntryPage-drinkQuantity\").value = this.state.result.qty;\n        } else if (this.state.result.sectionno === \"C\") {\n            document.getElementById(\"calorieEntryPage-ingredientNameCaloriesPerGram\").value = this.state.result.mealname;\n            document.getElementById(\"calorieEntryPage-ingredientGrams\").value = this.state.result.qty;\n        } else {\n            document.getElementById(\"calorieEntryPage-manualEntryName\").value = this.state.result.mealname;\n            document.getElementById(\"calorieEntryPage-manualEntryCalories\").value = this.state.result.unitcal;\n        }\n    }\n\n    // Function to open Nutritionnix URL\n    openNutritionnixURL = () => {\n        window.open(\"https://www.nutritionix.com/uk/database/common-foods\");\n    }\n\n    // This function will call the post route\n    handleInfoEdit = event => {\n        API.editInfo(event)\n          .then(res => this.setState({didSubmit:\"Yes\"}))\n          .catch(err => console.log(err));\n      }\n\n    // Function to extract numeric-calorie-amount inside the parenthesis () from the name of the food\n    parseCalorie = (foodName) => {\n        var str1 = foodName;\n        var leftP = str1.indexOf( \"(\" )+1;\n        var rightP = str1.indexOf( \")\" );\n        var part1 = str1.substr(leftP, rightP-leftP);\n        rightP = part1.indexOf( \"c\" )-1;\n        var part2 = part1.substr(0, rightP)\n\n        return part2\n    }\n\n    // Function to validate form data\n    validateFormData = () => {\n        var dateInput = this.state.startDate;                                                        \n        var mealCategory = document.getElementById(\"calorieEntryPage-mealCategory\").value;\n        var mealNameCaloriesPerSingleQuantity = document.getElementById(\"calorieEntryPage-mealNameCaloriesPerSingleQuantity\").value;\n        var mealQuantity = parseFloat(document.getElementById(\"calorieEntryPage-mealQuantity\").value.trim());\n        var drinkNameCaloriesPerGlass = document.getElementById(\"calorieEntryPage-drinkNameCaloriesPerGlass\").value.trim();\n        var drinkQuantity = parseFloat(document.getElementById(\"calorieEntryPage-drinkQuantity\").value.trim());\n        var ingredientNameCaloriesPerGram = document.getElementById(\"calorieEntryPage-ingredientNameCaloriesPerGram\").value;\n        var ingredientGrams = parseFloat(document.getElementById(\"calorieEntryPage-ingredientGrams\").value.trim());\n        var manualEntryName = document.getElementById(\"calorieEntryPage-manualEntryName\").value.trim();\n        var manualEntryCalories = parseFloat(document.getElementById(\"calorieEntryPage-manualEntryCalories\").value.trim());\n        var notesInput = document.getElementById(\"calorieEntryPage-notes\").value.trim();\n        \n        // Validation - Section 2\n        if (mealCategory === \"0\") {\n        document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please select meal category.\";\n        return;\n        }\n        // --------------------\n        // Validation - Section 3\n        // Section 3 - checking to see that question 1 for Part A, B, C, D are not all empty\n        else if ((mealNameCaloriesPerSingleQuantity === \"0\") && (drinkNameCaloriesPerGlass === \"0\") && (ingredientNameCaloriesPerGram === \"0\") && (manualEntryName === \"\")) {\n        document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out section 3.\";\n        return;\n        }\n        // Section 3 - checking to see if question 1 has been filled out for other parts besides Part A\n        else if ((mealNameCaloriesPerSingleQuantity !== \"0\") && (drinkNameCaloriesPerGlass !== \"0\")) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if ((mealNameCaloriesPerSingleQuantity !== \"0\") && (ingredientNameCaloriesPerGram !== \"0\")) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if ((mealNameCaloriesPerSingleQuantity !== \"0\") && (manualEntryName !== \"\")) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // Section 3 - checking to see if question 1 has been filled out for other parts besides Part B  \n        else if ((drinkNameCaloriesPerGlass !== \"0\") && (ingredientNameCaloriesPerGram !== \"0\")) {\n        document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if ((drinkNameCaloriesPerGlass !== \"0\") && (manualEntryName !== \"\")) {\n        document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // Section 3 - checking to see if question 1 has been filled out for other parts besides Part C\n        else if ((ingredientNameCaloriesPerGram !== \"0\") && (manualEntryName !== \"\")) {\n        document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // --------------------\n        // Validation - Section 3  \n        // Section 3 - checking to see if Part A question 2 is a number\n        else if ( \n                (mealNameCaloriesPerSingleQuantity !== \"0\") && \n                (drinkNameCaloriesPerGlass === \"0\") && (ingredientNameCaloriesPerGram === \"0\") && (manualEntryName === \"\") &&\n                (isNaN(mealQuantity))\n                ) {\n                document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out quantity for section 3 part A.\";\n                return;\n        }\n        // Section 3 - checking to see if Part B question 2 is a number\n        else if ( \n                (drinkNameCaloriesPerGlass !== \"0\") && \n                (mealNameCaloriesPerSingleQuantity === \"0\") && (ingredientNameCaloriesPerGram === \"0\") && (manualEntryName === \"\") &&\n                (isNaN(drinkQuantity))\n                ) {\n                document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out quantity for section 3 part B.\";\n                return;\n        }\n        // Section 3 - checking to see if Part C question 2 is a number\n        else if ( \n                (ingredientNameCaloriesPerGram !== \"0\") && \n                (mealNameCaloriesPerSingleQuantity === \"0\") && (drinkNameCaloriesPerGlass === \"0\") && (manualEntryName === \"\") &&\n                (isNaN(ingredientGrams))\n                ) {\n                document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out number of grams for section 3 part C.\";\n                return;\n        }\n        // Section 3 - checking to see if Part D question 2 is a number\n        else if ( \n                (manualEntryName !== \"\") && \n                (mealNameCaloriesPerSingleQuantity === \"0\") && (drinkNameCaloriesPerGlass === \"0\") && (ingredientNameCaloriesPerGram === \"0\") &&\n                (isNaN(manualEntryCalories))\n                ) {\n                document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out number of calories for section 3 part D.\";\n                return;\n        }\n        // --------------------\n        // Validation - Section 3  \n        // Section 3 - checking to see if question 2 has been filled out for other parts besides Part A\n        else if (((mealNameCaloriesPerSingleQuantity !== \"0\") && (mealQuantity > 0)) && drinkQuantity > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((mealNameCaloriesPerSingleQuantity !== \"0\") && (mealQuantity > 0)) && ingredientGrams > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((mealNameCaloriesPerSingleQuantity !== \"0\") && (mealQuantity > 0)) && manualEntryCalories > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // Section 3 - checking to see if question 2 has been filled out for other parts besides Part B\n        else if (((drinkNameCaloriesPerGlass !== \"0\") && (drinkQuantity > 0)) && mealQuantity > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((drinkNameCaloriesPerGlass !== \"0\") && (drinkQuantity > 0)) && ingredientGrams > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((drinkNameCaloriesPerGlass !== \"0\") && (drinkQuantity > 0)) && manualEntryCalories > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // Section 3 - checking to see if question 2 has been filled out for other parts besides Part C\n        else if (((ingredientNameCaloriesPerGram !== \"0\") && (ingredientGrams > 0)) && mealQuantity > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((ingredientNameCaloriesPerGram !== \"0\") && (ingredientGrams > 0)) && drinkQuantity > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((ingredientNameCaloriesPerGram !== \"0\") && (ingredientGrams > 0)) && manualEntryCalories > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // Section 3 - checking to see if question 2 has been filled out for other parts besides Part D\n        else if (((manualEntryName !== \"0\") && (manualEntryCalories > 0)) && mealQuantity > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((manualEntryName !== \"0\") && (manualEntryCalories > 0)) && drinkQuantity > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        else if (((manualEntryName !== \"0\") && (manualEntryCalories > 0)) && ingredientGrams > 0) {\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"Please fill out only ONE part of section 3. Fill out either part A, B, C or D only.\";\n            return;\n        }\n        // The following else statement is creating a data object and empties the error-message field once it passes all validation\n        else {\n            //section #, mealname, qty, cal\n            document.getElementById(\"calorieEntryPage-errorMessage\").innerText = \"\";\n            var strMealName;\n            var strQty;\n            var strCal;\n\n            // Section A information\n            if (mealNameCaloriesPerSingleQuantity.trim()!=\"\" && mealNameCaloriesPerSingleQuantity.trim()!=0){\n                var sectionNumber = \"A\";\n                strMealName = mealNameCaloriesPerSingleQuantity;\n                strQty = mealQuantity;\n                strCal = this.parseCalorie(strMealName);\n            // Section B information\n            } else if (drinkNameCaloriesPerGlass.trim()!=\"\" && drinkNameCaloriesPerGlass.trim()!=0){\n                var sectionNumber = \"B\";\n                strMealName = drinkNameCaloriesPerGlass;\n                strQty = drinkQuantity;\n                strCal = this.parseCalorie(strMealName);\n            // Section C information\n            } else if (ingredientNameCaloriesPerGram.trim()!=\"\" && ingredientNameCaloriesPerGram.trim()!=0){\n                var sectionNumber = \"C\";\n                strMealName = ingredientNameCaloriesPerGram;\n                strQty = ingredientGrams;\n                strCal = this.parseCalorie(strMealName);\n            // Section D information\n            } else if (manualEntryName.trim()!=\"\"){\n                var sectionNumber = \"D\";\n                strMealName = manualEntryName;\n                strQty = 1;\n                strCal = manualEntryCalories;\n            }\n\n            var data = {      \n                id: this.state.result._id,\n                username: this.state.result.username,\n                date: dateInput,\n                mealtype: mealCategory,\n                sectionno: sectionNumber,\n                mealname: strMealName,\n                qty:parseFloat(strQty),\n                unitcal: parseFloat(strCal),\n                comments: notesInput\n            };\n\n            // Calling the post method\n            this.handleInfoEdit(data);\n\n            // Clear the form when submitting and show a success message\n            document.getElementById(\"calorieEntryPage-mealCategory\").value = \"0\";\n            document.getElementById(\"calorieEntryPage-mealNameCaloriesPerSingleQuantity\").value = \"0\";\n            document.getElementById(\"calorieEntryPage-mealQuantity\").value = \"\";\n            document.getElementById(\"calorieEntryPage-drinkNameCaloriesPerGlass\").value = \"0\";\n            document.getElementById(\"calorieEntryPage-drinkQuantity\").value = \"\";\n            document.getElementById(\"calorieEntryPage-ingredientNameCaloriesPerGram\").value = \"0\";\n            document.getElementById(\"calorieEntryPage-ingredientGrams\").value = \"\";\n            document.getElementById(\"calorieEntryPage-manualEntryName\").value = \"\";\n            document.getElementById(\"calorieEntryPage-manualEntryCalories\").value = \"\";\n            document.getElementById(\"calorieEntryPage-notes\").value = \"\";\n            document.getElementById(\"calorieEntryPage-successMessage\").innerText = \"Data updated successfully!\";\n\n            // Go back to previous page\n            this.props.history.push(\"/CalorieData\");\n            // Scroll back to top of page (of /CalorieData)\n            window.scrollTo(0, 0);\n            }\n    }\n\n    render() {\n        return(\n        <div>\n\n            {/* ---------------------------------------- */}\n            {/* MAIN CONTENT OF PAGE */}\n\n            {/* Page Wrapper */}\n            <div className=\"pageWrapper\">\n\n                {/* Hello user first name text and sign out anchor */}\n                <HelloUserAndSignOut />\n\n                {/* Page header */}\n                <div className=\"pageHeader\">Calorie Entry</div>\n            \n                {/* Main content container */}\n                <div className=\"mainContentContainer\">\n\n                    {/* BOOTSTRAP GRID */}\n                    {/* Max width 960px container */}\n                    {/* Put any bootstrap elements into class=\"container\" to set max width to 960px and have it centered on page */}\n                    <Container>         \n                        \n                        {/* Calorie entry form */}\n                        <Row>\n\n                            <Col size=\"col-md-6 offset-md-3\">           \n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <p className=\"sectionTitle\">Enter data:</p>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n\n                                {/* ------------------------------ */}\n                                {/* Subrow (FORM SECTION 1) */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">1.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Please select date:</p>                                   \n                                        {/* Datepicker */}\n                                        <div id=\"calorieEntryPage-datepicker\">\n                                            <DatePicker\n                                            dateFormat=\"yyyy/MM/dd\"\n                                            selected={this.state.startDate}\n                                            onChange={this.handleChange}\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n\n                                <Br />\n\n                                {/* <hr class=\"horizontalRuleGray\"></hr> */}\n                                <hr className=\"horizontalRuleBlue\"></hr>\n                                {/* <hr class=\"horizontalRuleYellow\"></hr> */}\n                                \n                                {/* ------------------------------ */}\n                                {/* Subrow (FORM SECTION 2) */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">2.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Please select meal category:</p>\n                                        <select className=\"chosen-select dropDownMenu1\" id=\"calorieEntryPage-mealCategory\">\n                                            <option value=\"0\"></option>\n                                            <option value=\"01 Breakfast\">Breakfast</option>\n                                            <option value=\"02 Morning snack\">Morning snack</option>\n                                            <option value=\"03 Lunch\">Lunch</option>\n                                            <option value=\"04 Afternoon snack\">Afternoon snack</option>\n                                            <option value=\"05 Dinner\">Dinner</option>\n                                            <option value=\"06 Other snack\">Other snack</option>\n                                        </select>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                {/* <hr class=\"horizontalRuleGray\"></hr> */}\n                                <hr className=\"horizontalRuleBlue\"></hr>\n                                {/* <hr class=\"horizontalRuleYellow\"></hr> */}\n\n                                {/* ------------------------------ */}\n                                {/* Subrow (FORM SECTION 3) */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">3.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Please enter <span className=\"mainContentTextRed\">ONE</span> of the following parts:</p>\n                                        <p className=\"mainContentTextRed\">(fill out either part A, B, C or D only)</p>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">A.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Select from meal list:</p>\n                                        <select className=\"chosen-select dropDownMenu1\" id=\"calorieEntryPage-mealNameCaloriesPerSingleQuantity\">\n                                            {/* IN ALPHABETICAL ORDER */}\n                                            {/* \n                                            For the value attribute, REMEMBER TO ONLY ENTER NUMERALS FOR THE CALORIE PART and not any other part. \n                                            For example a Chobani simply 100 yogurt should be entered as \n                                            \"Chobani simply one hundred yogurt (100 cal)\" and NOT: \"Chobani simply 100 yogurt (100 cal)\" \n                                            */}\n                                            <option value=\"0\"></option>\n                                            <option value=\"Hamburger (540 cal)\">Hamburger (540 cal)</option>\n                                            <option value=\"Salad - plain (20 cal)\">Salad - plain (20 cal)</option>\n                                            <option value=\"Salad - with dressing (148 cal)\">Salad - w/ dressing (148 cal)</option>\n                                            <option value=\"Steak - beef (614 cal)\">Steak - beef (614 cal)</option>\n                                            <option value=\"Steak - tuna (184 cal)\">Steak - tuna (184 cal)</option>\n                                        </select>\n                                        <Br />\n                                        <input type=\"text\" className=\"form-control\" id=\"calorieEntryPage-mealQuantity\" placeholder=\"Quantity\" autoComplete=\"off\"></input>  \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                    </Col>\n                                </Row>\n                                \n                                <Br />\n                                <Br />\n                                <Br />\n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">B.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Select from drink list:</p>\n                                        <select className=\"chosen-select dropDownMenu1\" id=\"calorieEntryPage-drinkNameCaloriesPerGlass\">\n                                            {/* IN ALPHABETICAL ORDER */}\n                                            {/*                                         \n                                            For the value attribute, REMEMBER TO ONLY ENTER NUMERALS FOR THE CALORIE PART and not any other part. \n                                            For example a Chobani simply 100 yogurt should be entered as \n                                            \"Chobani simply one hundred yogurt (100 cal)\" and NOT: \"Chobani simply 100 yogurt (100 cal)\"\n                                            */}\n                                            <option value=\"0\"></option>\n                                            <option value=\"Beer - can (153 cal)\">Beer - can (153 cal)</option>\n                                            <option value=\"Wine - red, glass (125 cal)\">Wine - red, glass (125 cal)</option>\n                                            <option value=\"Wine - white, glass (121 cal)\">Wine - white, glass (121 cal)</option>\n                                            <option value=\"Soda - Cola, can (140 cal)\">Soda - Cola, can (140 cal)</option>\n                                        </select>\n                                        <Br />\n                                        <input type=\"text\" className=\"form-control\" id=\"calorieEntryPage-drinkQuantity\" placeholder=\"Quantity\" autoComplete=\"off\"></input>   \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                <Br />\n                                <Br />\n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">C.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Select from ingredient list:</p>\n                                        <select className=\"chosen-select dropDownMenu1\" id=\"calorieEntryPage-ingredientNameCaloriesPerGram\">\n                                            {/* IN ALPHABETICAL ORDER */}\n                                            {/*                                          \n                                            For the value attribute, REMEMBER TO ONLY ENTER NUMERALS FOR THE CALORIE PART and not any other part. \n                                            For example a Chobani simply 100 yogurt should be entered as \n                                            \"Chobani simply one hundred yogurt (100 cal)\" and NOT: \"Chobani simply 100 yogurt (100 cal)\"\n                                            */}\n                                            <option value=\"0\"></option>\n                                            <option value=\"Carrot (0.3 cal/g)\">Carrot (0.3 cal/g)</option>\n                                            <option value=\"Onion (0.4 cal/g)\">Onion (0.4 cal/g)</option>\n                                            <option value=\"Spinach (0.2 cal/g)\">Spinach (0.2 cal/g)</option>\n                                        </select>\n                                        <Br />\n                                        <input type=\"text\" className=\"form-control\" id=\"calorieEntryPage-ingredientGrams\" placeholder=\"Grams\" autoComplete=\"off\"></input>    \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                <Br />\n                                <Br />\n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">D.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Manual entry of meal / drink / ingredient:</p>\n                                        <p className=\"anchor1\" onClick={this.openNutritionnixURL}>Click here to look up calories</p>\n                                        <Br2 />\n                                    </Col>\n                                </Row>\n                                \n                                <Row>\n                                    <Col size=\"col-md-1\"></Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <input type=\"text\" className=\"form-control\" id=\"calorieEntryPage-manualEntryName\" placeholder=\"Name of meal / drink / ingredient\" autcomplete=\"off\"></input>   \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <input type=\"text\" className=\"form-control\" id=\"calorieEntryPage-manualEntryCalories\" placeholder=\"Calories\" autoComplete=\"off\"></input>     \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                {/* <hr class=\"horizontalRuleGray\"></hr> */}\n                                <hr className=\"horizontalRuleBlue\"></hr>\n                                {/* <hr class=\"horizontalRuleYellow\"></hr> */}\n\n                                {/* ------------------------------ */}\n                                {/* Subrow (FORM SECTION 4) */}\n                                <Row>\n                                    <Col size=\"col-md-1\">\n                                        <p className=\"sectionTitle\">4.</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <p className=\"mainContentTextBlack\">Please enter any additional notes (optional):</p>\n                                        <textarea className=\"form-control\" id=\"calorieEntryPage-notes\" placeholder=\"\" rows=\"4\" autoComplete=\"off\"></textarea>       \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                    </Col>\n                                </Row> \n                                \n                                <Br />\n                                {/* <hr class=\"horizontalRuleGray\"></hr> */}\n                                <hr className=\"horizontalRuleBlue\"></hr>\n                                {/* <hr class=\"horizontalRuleYellow\"></hr> */}\n\n                                {/* ------------------------------ */}\n                                {/* Subrow (FORM SECTION 4) */}\n                                <Row>\n                                    <Col size=\"col-md-1\"></Col>\n\n                                    <Col size=\"col-md-10\">\n                                        <button className=\"button1\" id=\"calorieEntryPageSubmitButton\" onClick={this.validateFormData}>Update</button>\n                                        <div className=\"mainContentTextRed\" id=\"calorieEntryPage-errorMessage\"></div>\n                                        <div className=\"mainContentTextBlue\" id=\"calorieEntryPage-successMessage\"></div>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                <Br />\n                                <Br />\n\n                            </Col>\n\n                        </Row>\n\n                    </Container>\n\n            </div>\n\n            </div>\n\n\n            {/* ---------------------------------------- */}\n            {/* HAMBURGER MENU */}\n\n            <HamburgerMenu />\n\n        </div>\n        )\n    }\n}\n\nexport default CalorieEntryEdit;","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport HamburgerMenu from \"../components/HamburgerMenu\";\nimport Br from \"../components/CustomLineBreak\";\nimport Br2 from \"../components/CustomLineBreak2\";\nimport \"../components/Buttons/buttons.css\";\nimport \"../components/Text/text.css\";\nimport \"../components/CalorieDataListGroupItem/calorieDataListGroupItem.css\";\nimport \"../components/Table/table.css\";\nimport HelloUserAndSignOut from \"../components/HelloUserAndSignOut\";\nimport \"../components/InputAndSelectField/inputAndSelectField.css\";\nimport \"../components/PageWrapper/pageWrapper.css\";\nimport \"../components/MainContentContainer/mainContentContainer.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../components/CustomReactDatepicker/customReactDatepicker.css\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// Run \"npm start\" to start React app.\n// Run \"npm i\" or \"npm i [specific component name]\" in the command line if there are any dependencies missing in the node modules folder.\n\nvar userName = localStorage.getItem(\"username\");       // delete this line in production\nvar userData = {\"userName\": userName, \"userDate\": new Date()}\n\nclass CalorieData extends React.Component {\n  \n    constructor(props) {\n        super(props);\n        this.state = {\n          startDate: new Date(),\n          userInfo: [],\n          totalCal: 0\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n     \n    // For React Datepicker\n    handleChange(date) {\n    this.setState({\n        startDate: date\n    });\n    userData.userDate = new Date(date);\n    this.loadInfo(userData);\n    }\n\n    // loading user information as soon as the component is loaded\n    componentDidMount() {\n      this.loadInfo(userData);\n    }\n\n    loadInfo = (userData) => {\n      API.getInfo(userData)\n        .then(res => {\n            this.setState({ userInfo: res.data });\n            this.totalCalculator(this.state.userInfo);\n          }\n        )\n        .catch(err => console.log(err)\n      );\n    };\n\n    totalCalculator = (userInfo) => {\n      var newTot = 0;\n      for( let i=0; i<userInfo.length; i++){\n        newTot = newTot + (parseFloat(userInfo[i].qty) * parseFloat(userInfo[i].unitcal))\n      }\n      this.setState({totalCal: newTot})\n    }\n\n    // deleting records from MongoDB\n    handleInfoRemove = event => {\n      API.deleteInfo(event)\n        .then(res => this.loadInfo(userData))\n        .catch(err => console.log(err));\n    }\n\n    // handling editing records in MongoDB\n    //handleInfoEdit = event => {\n      //console.log(event)\n    //}\n\n    render() {\n        return(\n        <div>\n\n            {/* ---------------------------------------- */}\n            {/* MAIN CONTENT OF PAGE */}\n\n            {/* Page Wrapper */}\n            <div className=\"pageWrapper\">\n\n                {/* Hello user first name text and sign out anchor */}\n                <HelloUserAndSignOut />\n\n                {/* Page header */}\n                <div className=\"pageHeader\">Calorie Data</div>\n            \n                {/* Main content container */}\n                <div className=\"mainContentContainer\">\n\n                    {/* BOOTSTRAP GRID */}\n                    {/* Max width 960px container */}\n                    {/* Put any bootstrap elements into class=\"container\" to set max width to 960px and have it centered on page */}\n                    <Container>         \n                        \n                        {/* Calorie data retrieval */}\n                        <Row>\n\n                            <Col size=\"col-md-6 offset-md-3\">           \n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <p className=\"sectionTitle\">Retrieve data:</p>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n\n                                {/* ------------------------------ */}\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-12\">                               \n                                        {/* Datepicker */}\n                                        <div className=\"mainContentTextBlack\">Filter by date:</div>\n                                        <Br />\n                                        {/* Datepicker */}\n                                        <div className=\"customReactDatepicker\" id=\"calorieDataPage-datepicker\">\n                                            <DatePicker\n                                            dateFormat=\"yyyy/MM/dd\"\n                                            selected={this.state.startDate}\n                                            onChange={this.handleChange}\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                \n                                {/* ------------------------------ */}\n                                {/* Subrow (Retrieved data populates here) */}\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <p id=\"calorieDataPage-retrievedData\"></p>                                     \n                                          <ul className=\"list-group\">\n                                            {this.state.userInfo.map(result => (\n                                              <li className=\"list-group-item mainContentTextBlack calorieDataListGroupItem\" key={result._id}>\n                                                <Row>\n                                                  <Col size=\"col-md-12\" className=\"text-justify\">\n                                                    <Br2 />\n                                                    <Br2 />\n                                                    <Br2 />\n                                                    <Br2 />\n                                                    {result.mealtype.substring(3, 20)}<br />\n                                                    {result.mealname}<br />\n                                                    Calories: {result.unitcal * result.qty}<br />\n                                                    Comments: {result.comments}<br />\n                                                    {/* <Link\n                                                      to=\"/CalorieEntryEdit\"\n                                                      params={{ calorieData: result }}\n                                                      className={window.location.pathname === \"/CalorieEntryEdit\" ? \"nav-link active\" : \"nav-link\"}\n                                                    > */}\n                                                    <Br />\n                                                    <Link\n                                                      to={{\n                                                      pathname:\"/CalorieEntryEdit\",\n                                                      calorieInfo: result\n                                                    }} >                                                  \n                                                      <button id=\"calorieDataEdit\">Edit</button>\n                                                    </Link> \n                                                    {/* <Br /> */}\n                                                    <button id=\"calorieDataDelete\"  onClick={() => this.handleInfoRemove(result._id)}>Delete</button>\n                                                  </Col>   \n                                                </Row>\n                                              </li>\n                                            ))}\n                                          </ul>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                <Br />\n                                <Br2 />\n                                <Br2 />\n\n                                {/* ------------------------------ */}\n                                {/* Subrow (Calories grand total goes here) */}\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <p className=\"mainContentTextBlueMediumBold\">Total: <span className=\"mainContentTextBlueMediumBold\" id=\"calorieDataPage-calorieGrandTotal\">{this.state.totalCal}</span> Calories</p>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n\n                                {/* <hr class=\"horizontalRuleGray\"></hr> */}\n                                <hr className=\"horizontalRuleBlue\"></hr>\n                                {/* <hr class=\"horizontalRuleYellow\"></hr> */}\n\n                                {/* ------------------------------ */}\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <p className=\"sectionTitle\">Recommended daily calorie intake:</p>\n                                        <Br />\n                                        <p className=\"sectionTitle\">Female:</p>\n                                        <table className=\"calorieDataTable\">\n                                            <tr>\n                                                <th>Years</th>\n                                                <th>Calories</th>\n                                            </tr>\n                                            <tr>\n                                                <td>19~25</td>\n                                                <td>2000~2400</td>\n                                            </tr>\n                                            <tr>\n                                                <td>26~30</td>\n                                                <td>1800~2400</td>\n                                            </tr>\n                                            <tr>\n                                                <td>31~35</td>\n                                                <td>1800~2200</td>\n                                            </tr>\n                                            <tr>\n                                                <td>36~40</td>\n                                                <td>1800~2200</td>\n                                            </tr>\n                                            <tr>\n                                                <td>41~45</td>\n                                                <td>1800~2200</td>\n                                            </tr>\n                                            <tr>\n                                                <td>46~50</td>\n                                                <td>1800~2200</td>\n                                            </tr>\n                                            <tr>\n                                                <td>51~55</td>\n                                                <td>1600~2200</td>\n                                            </tr>\n                                            <tr>\n                                                <td>56~60</td>\n                                                <td>1600~2200</td>\n                                            </tr>\n                                            <tr>\n                                                <td>61~65</td>\n                                                <td>1600~2000</td>\n                                            </tr>\n                                            <tr>\n                                                <td>66~70</td>\n                                                <td>1600~2000</td>\n                                            </tr>\n                                            <tr>\n                                                <td>71~75</td>\n                                                <td>1600~2000</td>\n                                            </tr>\n                                            <tr>\n                                                <td>76 and up</td>\n                                                <td>1600~2000</td>\n                                            </tr>\n                                        </table>\n                                        <Br />\n                                        <Br />\n                                        <p className=\"sectionTitle\">Male:</p>\n                                        <table className=\"calorieDataTable\">\n                                            <tr>\n                                                <th>Years</th>\n                                                <th>Calories</th>\n                                            </tr>\n                                            <tr>\n                                                <td>19~25</td>\n                                                <td>2600~3000</td>\n                                            </tr>\n                                            <tr>\n                                                <td>26~30</td>\n                                                <td>2400~3000</td>\n                                            </tr>\n                                            <tr>\n                                                <td>31~35</td>\n                                                <td>2400~3000</td>\n                                            </tr>\n                                            <tr>\n                                                <td>36~40</td>\n                                                <td>2400~2800</td>\n                                            </tr>\n                                            <tr>\n                                                <td>41~45</td>\n                                                <td>2200~2800</td>\n                                            </tr>\n                                            <tr>\n                                                <td>46~50</td>\n                                                <td>2200~2800</td>\n                                            </tr>\n                                            <tr>\n                                                <td>51~55</td>\n                                                <td>2200~2800</td>\n                                            </tr>\n                                            <tr>\n                                                <td>56~60</td>\n                                                <td>2200~2600</td>\n                                            </tr>\n                                            <tr>\n                                                <td>61~65</td>\n                                                <td>2000~2600</td>\n                                            </tr>\n                                            <tr>\n                                                <td>66~70</td>\n                                                <td>2000~2600</td>\n                                            </tr>\n                                            <tr>\n                                                <td>71~75</td>\n                                                <td>2000~2600</td>\n                                            </tr>\n                                            <tr>\n                                                <td>76 and up</td>\n                                                <td>2000~2400</td>\n                                            </tr>\n                                        </table>\n                                        <Br />\n\n                                        {/* <hr class=\"horizontalRuleGray\"></hr> */}\n                                        {/* <hr className=\"horizontalRuleBlue\"></hr> */}\n                                        <hr class=\"horizontalRuleYellow\"></hr>\n\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">Lower calorie figure is for a sedentary lifestyle. \n                                        <Br2 />\n                                        Upper calorie figure is for an active lifestyle. \n                                        <Br />\n                                        <Br />\n                                        <Br />\n                                        For example in \n                                        <Br2 />\n                                        Female: 19~25 yrs: 2000~2400 cal, \n                                        <Br2 />\n                                        2000 is for a sedentary lifestyle and \n                                        <Br2 />\n                                        2400 is for an active lifestyle.\n                                        <Br />\n                                        <Br />\n                                        <Br />\n                                        Sedentary means a lifestyle that includes only light physical activity associated with typical day-to-day life.\n                                        <Br />\n                                        Active means a lifestyle that includes physical activity equivalent to walking more than 3 miles per day at 3 to 4 miles per hour, in addition to light physical activity associated with typical day-to-day life.\n                                        </p>\n                                        <Br />\n                                        <Br />\n                                        <a className=\"anchor1\" href=\"https://health.gov/dietaryguidelines/2015/guidelines/appendix-2/\" target=\"_blank\">Recommended daily calorie intake source for above table</a>\n                                        <Br />\n                                        <a className=\"anchor1\" href=\"https://www.webmd.com/diet/features/estimated-calorie-requirement\" target=\"_blank\">Sedentary and active lifestyle definition source</a>\n                                    </Col>\n                                </Row>\n                                \n                                <Br />\n                                <Br />\n                                <Br />\n                                \n                            </Col>\n\n                        </Row>\n\n                    </Container>\n\n                </div>\n\n            </div>\n\n\n            {/* ---------------------------------------- */}\n            {/* HAMBURGER MENU */}\n\n            <HamburgerMenu />\n\n        </div>\n        )\n    }\n}\n\nexport default CalorieData;","import React, { Component, Fragment } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { Card } from 'react-bootstrap/';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from 'react-google-maps';\nimport './yelpGoogleApi.css';\n// import {ButtonContainer} from \"./ButtonContainer\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from 'mdbreact';\n\nvar storetype = 'healthmarkets';\nfunction yelpApiCall(yelp_params, callback) {\n\tconst axios = require('axios');\n\taxios\n\t\t.get(\n\t\t\t`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search?&location=` +\n\t\t\t\tyelp_params,\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ` + process.env.REACT_APP_YELP_KEY\n\t\t\t\t},\n\t\t\t\tparams: {\n\t\t\t\t\tcategories: storetype\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\t.then((res) => {\n\t\t\tcallback(res.data);\n\t\t\treturn res.data.businesses[0].id;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\t//    alert(\"please enter a city name or zip code\")\n\t\t});\n}\n\nclass Map extends Component {\n\tstate = {\n\t\tstores: [],\n\t\tcity: 'bronx',\n\t\thandleMarkerToggleWindowOpen: 1,\n\t\tvalue: 'healthmarkets'\n\t};\n\n\tcomponentDidMount() {\n\t\t// once the component mounts, i make the call to the api\n\t\tyelpApiCall((yelp) => {\n\t\t\tconsole.log(yelp.businesses[0].coordinates);\n\t\t\tthis.setState({\n\t\t\t\tstores: yelp.businesses,\n\t\t\t\tcity: this.state.yelp_params\n\t\t\t});\n\t\t});\n\t}\n\n\tyelpStoreTypes = (event) => {\n\t\tconst value = event.target.value;\n\t\tstoretype = value;\n\t\tthis.setState({ value: value });\n\t};\n\n\thandleInputChange = (event) => {\n\t\tevent.cancelable = false;\n\t\tevent.persist();\n\t\tevent.preventDefault();\n\t\tthis.setState({\n\t\t\tcity: event.target.value\n\t\t});\n\t};\n\thandleFormSubmit = (event) => {\n\t\t// Preventing the default behavior of the form submit (which is to refresh the page)\n\t\tevent.preventDefault();\n\t\tyelpApiCall(this.state.city, (yelp) => {\n\t\t\t// Updating the input's state\n\t\t\t// console.log(yelp.businesses);\n\n\t\t\tthis.setState({\n\t\t\t\tstores: yelp.businesses\n\t\t\t});\n\t\t});\n\t};\n\n\tstatic defaultProps = {\n\t\tgoogleMapURL:\n\t\t\t'https://maps.googleapis.com/maps/api/js?key=' +\n\t\t\tprocess.env.REACT_APP_GOOGLE_KEY +\n\t\t\t'&v=3.exp&libraries=geometry,drawing,places'\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tyelpApiCall((yelp) => {\n\t\t\tthis.state = {\n\t\t\t\tstores: yelp.businesses,\n\t\t\t\tcity: this.state.yelp_params\n\t\t\t};\n\t\t});\n\t}\n\n\thandleMarkerToggleWindowOpen = (markerId) => {\n\t\tthis.setState({\n\t\t\thandleMarkerToggleWindowOpen: markerId\n\t\t});\n\t};\n\n\thandleMarkerToggleWindowClose = () => {\n\t\tthis.setState({\n\t\t\thandleMarkerToggleWindowClose: ''\n\t\t});\n\t};\n\n\tCMap = withScriptjs(\n\t\twithGoogleMap((props) => (\n\t\t\t<GoogleMap\n\t\t\t\tdefaultZoom={10}\n\t\t\t\tdefaultCenter={{ lat: 40.7799404643263, lng: -73.980282552649 }}\n\t\t\t\tdefaultOptions={{ disableDefaultUI: true }}\n\t\t\t>\n\t\t\t\t{props.children}\n\t\t\t</GoogleMap>\n\t\t))\n\t);\n\trender() {\n\t\tthis.state.stores.map((restaurant, i) => 'do');\n\t\treturn (\n\t\t\t<div className=\"py-5\">\n\t\t\t\t<div className=\"container d-flex justify-content-center\">\n\t\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t<div className=\"row mt-5\">\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\n\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\tEnter a Location:\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tautocomplete=\"off\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t\t<MDBDropdown>\n\t\t\t\t\t\t\t\t\t\t<MDBDropdownToggle caret color=\"primary\">\n\t\t\t\t\t\t\t\t\t\t\tChoose a Store Type\n\t\t\t\t\t\t\t\t\t\t</MDBDropdownToggle>\n\t\t\t\t\t\t\t\t\t\t<MDBDropdownMenu basic>\n\t\t\t\t\t\t\t\t\t\t\t<MDBDropdownItem value=\"farmersmarket\" onClick={this.yelpStoreTypes}>\n\t\t\t\t\t\t\t\t\t\t\t\tFarmers Market\n\t\t\t\t\t\t\t\t\t\t\t</MDBDropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<MDBDropdownItem value=\"markets\" onClick={this.yelpStoreTypes}>\n\t\t\t\t\t\t\t\t\t\t\t\tFruit and Veggie Markets\n\t\t\t\t\t\t\t\t\t\t\t</MDBDropdownItem>{' '}\n\t\t\t\t\t\t\t\t\t\t\t<MDBDropdownItem value=\"organic_stores\" onClick={this.onClickHandler}>\n\t\t\t\t\t\t\t\t\t\t\t\tOrganic Stores\n\t\t\t\t\t\t\t\t\t\t\t</MDBDropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<MDBDropdownItem value=\"cardioclasses\" onClick={this.yelpStoreTypes}>\n\t\t\t\t\t\t\t\t\t\t\t\tCardio Classes\n\t\t\t\t\t\t\t\t\t\t\t</MDBDropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<MDBDropdownItem value=\"healthtrainers\" onClick={this.yelpStoreTypes}>\n\t\t\t\t\t\t\t\t\t\t\t\tHealth Trainers\n\t\t\t\t\t\t\t\t\t\t\t</MDBDropdownItem>\n\t\t\t\t\t\t\t\t\t\t\t<MDBDropdownItem value=\"yoga\" onClick={this.yelpStoreTypes}>\n\t\t\t\t\t\t\t\t\t\t\t\tYoga\n\t\t\t\t\t\t\t\t\t\t\t</MDBDropdownItem>\n\t\t\t\t\t\t\t\t\t\t</MDBDropdownMenu>\n\t\t\t\t\t\t\t\t\t</MDBDropdown>\n\t\t\t\t\t\t\t\t\t<Button variant=\"warning\" onClick={this.handleFormSubmit}>\n\t\t\t\t\t\t\t\t\t\t<span className=\"mr-2\">\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-carrot\">Search</i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t{/* </Card>  */}\n\n\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<this.CMap\n\t\t\t\t\t\t\t\t\t\t\tgoogleMapURL={this.props.googleMapURL}\n\t\t\t\t\t\t\t\t\t\t\tloadingElement={<div style={{ height: `100%` }} />}\n\t\t\t\t\t\t\t\t\t\t\tcontainerElement={<div style={{ width: '60vw', height: '100vh' }} />}\n\t\t\t\t\t\t\t\t\t\t\tmapElement={<div style={{ height: `100%` }} />}\n\t\t\t\t\t\t\t\t\t\t\tcenter={{ lat: 25.03, lng: 121.6 }}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.stores.slice(0, 5).map((restaurant, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Marker\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\t\t\t\tposition={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlat: restaurant.coordinates.latitude,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlng: restaurant.coordinates.longitude\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleMarkerToggleWindowOpen(i)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.handleMarkerToggleWindowOpen === i && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoWindow\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonCloseClick={() => this.handleMarkerToggleWindowClose(i)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tposition={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlat: restaurant.coordinates.latitude,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlng: restaurant.coordinates.longitude\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card style={{ width: '12rem' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"top\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={restaurant.image_url}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '75%' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trating: {restaurant.rating}{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"top\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"http://pluspng.com/img-png/yellow-stars-png-hd-golden-star-rotate-3d-render-footage-in-4k-chroma-key-green-screen-852.jpg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '25%' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tphone number: {restaurant.phone}{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"top\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"http://pluspng.com/img-png/yellow-stars-png-hd-golden-star-rotate-3d-render-footage-in-4k-chroma-key-green-screen-852.jpg\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '25%' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"warning\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noreferrer noopener\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={restaurant.url}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{restaurant.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</InfoWindow>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Marker>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</this.CMap>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Map;","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport HamburgerMenu from \"../components/HamburgerMenu\";\nimport Br from \"../components/CustomLineBreak\";\nimport Br2 from \"../components/CustomLineBreak2\";\nimport \"../components/Buttons/buttons.css\";\nimport \"../components/Text/text.css\";\nimport HelloUserAndSignOut from \"../components/HelloUserAndSignOut\";\nimport \"../components/PageWrapper/pageWrapper.css\";\nimport \"../components/MainContentContainer/mainContentContainer.css\";\nimport \"../components/InputAndSelectField/inputAndSelectField.css\";\nimport YelpGoogleApi from \"../components/YelpGoogleApi\";\n\n// Run \"npm start\" to start React app.\n// Run \"npm i\" or \"npm i [specific component name]\" in the command line if there are any dependencies missing in the node modules folder.\n\nclass StoreFinder extends React.Component {\n    \n    render() {\n        return(\n        <div>\n\n            {/* ---------------------------------------- */}\n            {/* MAIN CONTENT OF PAGE */}\n\n            {/* Page Wrapper */}\n            <div className=\"pageWrapper\">\n\n                {/* Hello user first name text and sign out anchor */}\n                <HelloUserAndSignOut />\n\n                {/* Page header */}\n                <div className=\"pageHeader\">Store Finder</div>\n            \n                {/* Main content container */}\n                <div className=\"mainContentContainer\">\n\n                    {/* /* Yelp Google API component */}\n                    <YelpGoogleApi />\n\n                    <Br />\n                    <Br />\n                    <Br />\n\n\n\n                    {/* BOOTSTRAP GRID */}\n                    {/* Max width 960px container */}\n                    {/* Put any bootstrap elements into class=\"container\" to set max width to 960px and have it centered on page */}\n                    {/* <Container>          */}\n                        \n                        {/* Calorie entry form */}\n                        {/* <Row> */}\n\n                            {/* <Col size=\"col-md-6 offset-md-3\">            */}\n\n                                {/* Subrow */}\n                                {/* <Row> */}\n                                    {/* <Col size=\"col-md-12\"> */}\n                                        \n                                    {/* </Col> */}\n                                {/* </Row>  */}\n\n                                {/* <Br /> */}\n                                {/* <Br /> */}\n                                {/* <Br /> */}\n                                \n                            {/* </Col> */}\n\n                        {/* </Row> */}\n\n                    {/* </Container> */}\n\n\n\n                </div>\n\n            </div>\n\n\n            {/* ---------------------------------------- */}\n            {/* HAMBURGER MENU */}\n\n            <HamburgerMenu />\n\n        </div>\n        )\n    }\n}\n\nexport default StoreFinder;","import React from 'react'\n\nconst RecForm =(props)=>{\n    let  maxLengthCheck = (object) => {\n        if (object.target.value.length > object.target.maxLength) {\n         object.target.value = object.target.value.slice(0, object.target.maxLength)\n          }\n        }\n    return(\n        <form  className=\"container\" onSubmit={props.getRecipe}>\n            <div className=\"form-group form-inline justify-content-between\">\n                    <input  className= \"form-control col-lg-4 col-md-12 col-sm-12 mb-4\"\n                            type=\"text\"\n                            name= \"recipeName\"\n                            placeholder=\"Ingredients e.g. onion, beef\"\n                            value={props.receipeName}\n                            onChange={props.handleChange}\n                            required autoFocus\n                            autoComplete=\"off\"\n                            />\n                <input  className=\"form-control col-lg-4 col-md-12 col-sm-12 mb-4\"\n                            type=\"text\"\n                            name= \"calorie\"\n                            placeholder=\"Target calories\"\n                            maxLength=\"4\"\n                            onInput={maxLengthCheck}\n                            value={props.calorie}\n                            onChange={props.handleChange}\n                            required autoFocus\n                            autoComplete=\"off\"\n                            />\n                \n                <button className=\"col-lg-3 col-md-12 col-sm-12 text-center mb-4  search-button\"> Search</button>\n            </div>  \n        </form>\n    )\n}\nexport default RecForm;","import React from 'react';\nimport { Card } from 'reactstrap'\n\nconst NuTable = ({ recipe }) => {\n    return (\n        <Card className=\"border-0 align-self-center col-lg-3 col-md-12 tableBorder\">\n            <h3 className=\"text-center sectionTitle\"> Nutrition</h3>\n            <table className=\"table table-bordered nuTable\">\n                <tbody>\n                    <tr>\n                        <td className=\"recipeFinderTd\">Fat</td>\n                        {recipe.totalNutrients.FAT === undefined ?\n                            <td className=\"recipeFinderTd\">No data</td> :\n                            <td className=\"recipeFinderTd\">{recipe.totalNutrients.FAT.quantity.toFixed(2)}g</td>\n                        }\n                        {/* <td className=\"recipeFinderTd\">{recipe.totalNutrients.FAT.quantity.toFixed(2)}g</td> */}\n                    </tr>\n                    <tr>\n                        <td className=\"recipeFinderTd\">Cholesterol</td>\n                        {recipe.totalNutrients.CHOLE === undefined ?\n                            <td className=\"recipeFinderTd\">No data</td> :\n                            <td className=\"recipeFinderTd\">{recipe.totalNutrients.CHOLE.quantity.toFixed(2)}mg</td>\n                        }\n                    </tr>\n                    <tr>\n                        <td className=\"recipeFinderTd\">Sugar</td>\n                        {recipe.totalNutrients.SUGAR === undefined ?\n                            <td className=\"recipeFinderTd\">No data</td> :\n                            <td className=\"recipeFinderTd\">{recipe.totalNutrients.SUGAR.quantity.toFixed(2)}g</td>\n                        }\n                    </tr>\n                    <tr>\n                        <td className=\"recipeFinderTd\">Protein</td>\n                        {recipe.totalNutrients.PROCNT === undefined ?\n                            <td className=\"recipeFinderTd\">No data</td> :\n                            <td className=\"recipeFinderTd\">{recipe.totalNutrients.PROCNT.quantity.toFixed(2)}g</td>\n                        }\n                    </tr>\n                    <tr>\n                        <td className=\"recipeFinderTd\">Fiber</td>\n                        {recipe.totalNutrients.FIBTG === undefined ?\n                            // null :\n                            <td className=\"recipeFinderTd\">No data</td>: \n                            <td className=\"recipeFinderTd\">{recipe.totalNutrients.FIBTG.quantity.toFixed(2)}g</td>\n                        }\n                    </tr>\n                </tbody>\n            </table>\n        </Card>\n    )\n}\nexport default NuTable;","import React from 'react'\nimport NuTable from './NuTable'\nimport Br from \"../CustomLineBreak\";\nimport Br2 from \"../CustomLineBreak2\";\n\n\nconst Recipe = ({ recipe }) => {\n    const calories = recipe.calories;\n    const yeild = recipe.yield;\n    const calCalories = calories / yeild;\n    // console.log(calCalories)\n\n    return (\n       \n            <div className=\"row\" id=\"cardBg\">\n                <div className=\"align-self-center col-lg-3 col-md-12\">\n                    <img className=\"card-img recipeImg\"  \n                        src={recipe.image} \n                        alt={recipe.source}\n                        />\n                </div>\n                <div className=\"col-lg-6 col-md-12 ml-0 mr-0\" id=\"text-content\">\n                    <div className=\"card-body\">\n                        <h3 className=\"recipeCardTitle\" >{recipe.label}</h3>\n                        <Br />\n                        <Br2 />\n                        <Br2 />\n                        <h3 className=\"text-left calories\">Calories: {calCalories.toFixed(2)} cal per serving </h3>\n                        <Br />\n                        <h5 className=\"card-text servingSizeText\">Servings: {yeild}</h5> \n                        <Br />\n                        <Br />\n                        <h5 className=\"card-text ingredientsTitle\">Ingredients: </h5>\n                        <Br />\n                        {recipe.ingredientLines.map((ingredient,i)=>{\n                            return(\n                                <p className=\"d-inline-flex ingredients\" key ={i} >{ingredient},  </p>\n                            )\n                        })}\n                        <Br />\n                        <div className=\"d-flex justify-content-center\">\n \n                                <a href={recipe.url} target=\"_blank\" className=\"card-link\">More details...</a>\n\n                        </div>\n                        <Br />\n                    </div>\n                </div>\n                    <NuTable recipe={recipe} />\n            </div>\n        // </div>\n    )\n\n}\n\nexport default Recipe","import React from 'react'\nimport Recipe from './Recipe'\n\nconst Recipes = ({ recipes }) => {\n    return (\n        <section className=\"container\">\n        \n            <div className=\"row\">\n                {recipes.map((recipe, i) => \n                    <Recipe key={i} recipe={recipe}\n                    className=\"container\" />\n                )}\n            </div>\n        </section>\n    )\n}\n\n\nexport default Recipes;","import React, { Component } from 'react';\nimport '../components/RecipeFinder/RecipeFinder.css';\nimport RecForm from '../components/RecipeFinder/RecForm';\nimport Recipes from '../components/RecipeFinder/Recipes'\nimport HamburgerMenu from \"../components/HamburgerMenu\";\nimport Br from \"../components/CustomLineBreak\";\nimport Br2 from \"../components/CustomLineBreak2\";\nimport \"../components/Buttons/buttons.css\";\nimport \"../components/Text/text.css\";\nimport HelloUserAndSignOut from \"../components/HelloUserAndSignOut\";\nimport \"../components/PageWrapper/pageWrapper.css\";\nimport \"../components/MainContentContainer/mainContentContainer.css\";\nimport \"../components/InputAndSelectField/inputAndSelectField.css\";\n\nrequire('dotenv').config();\n\n// Run \"npm start\" to start React app.\n// Run \"npm i\" or \"npm i [specific component name]\" in the command line if there are any dependencies missing in the node modules folder.\n\nconst app_id = process.env.REACT_APP_FOOD_ID;\nconst app_key = process.env.REACT_APP_FOOD_KEY;\n\nclass RecipeFinder extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      recipeName: '',\n      calorie: '',\n      recipes: [],\n      message: ''\n    }\n  }\n  handleChange = (event) => {\n    const { name, value } = event.target\n    this.setState({ [name]: value.trim() })\n  }\n\n\n  getRecipe = async (e) => {\n    e.preventDefault()\n    const api_call = await fetch(`https://api.edamam.com/search?q=${this.state.recipeName}&app_id=${app_id}&app_key=${app_key}&from=0&to=20&calories=${this.state.calorie}`)\n    let data = await api_call.json()\n    data = data.hits.map(ele => ele.recipe);\n    console.log('RAW DATA ', data)\n\n    {\n      !data.length ?\n      (this.setState({\n        message: \"No matching recipes found.\",\n        recipeName: '',\n        calorie: '',\n        recipes: [],\n      })) :\n      (this.setState({\n        recipeName: '',\n        calorie: '',\n        message: '',\n        recipes: data\n      }))\n\n    }\n\n  }\n  //  componentDidMount = () => {\n  //   const json = localStorage.getItem(\"recipes\");\n  //   const recipes = JSON.parse(json);\n  //   this.setState({ recipes });\n  //   // this.setState({\n  //   //   recipeName:'',\n  //   //   calorie:30\n  //   // })\n  // }\n  // componentDidUpdate = () => {\n  //   const recipes = JSON.stringify(this.state.recipes);\n  //   localStorage.setItem(\"recipes\", recipes);\n  // }\n  render() {\n    const { recipeName, calorie, recipes, message } = this.state\n    console.log('search ', this.state.recipes)\n    return (\n      <div>\n\n        {/* ---------------------------------------- */}\n        {/* MAIN CONTENT OF PAGE */}\n\n        {/* Page Wrapper */}\n        <div className=\"pageWrapper\">\n\n          {/* Hello user first name text and sign out anchor */}\n          <HelloUserAndSignOut />\n\n          {/* Page header */}\n          <div className=\"pageHeader\">Recipe Finder</div>\n\n          {/* Main content container */}\n          <div className=\"mainContentContainer\">\n\n            {/* <header className=\"container-fluid\"> */}\n            {/* <h1 className=\"text-center\">Recipes Finder</h1> */}\n            {/* </header> */}\n\n            <RecForm className=\"\"\n              recipeName={recipeName}\n              handleChange={this.handleChange}\n              getRecipe={this.getRecipe}\n              calorie={calorie} />\n\n            {!this.state.recipes.length ?\n              (<h1 className='text-center mainContentTextRed'>{message}</h1>) :\n              (<Recipes className=\"container\" recipes={recipes} />)\n            }\n          </div>\n        </div>\n\n        {/* ---------------------------------------- */}\n        {/* HAMBURGER MENU */}\n\n        <HamburgerMenu />\n\n      </div>\n    );\n  }\n}\n\nexport default RecipeFinder;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport HamburgerMenu from \"../components/HamburgerMenu\";\nimport Br from \"../components/CustomLineBreak\";\nimport Br2 from \"../components/CustomLineBreak2\";\nimport \"../components/Buttons/buttons.css\";\nimport \"../components/Text/text.css\";\nimport HelloUserAndSignOut from \"../components/HelloUserAndSignOut\";\nimport \"../components/PageWrapper/pageWrapper.css\";\nimport \"../components/MainContentContainer/mainContentContainer.css\";\nimport \"../components/InputAndSelectField/inputAndSelectField.css\";\n\n// Run \"npm start\" to start React app.\n// Run \"npm i\" or \"npm i [specific component name]\" in the command line if there are any dependencies missing in the node modules folder.\n\nclass HealthTimeline extends React.Component {\n\n    state = {\n        gender: \"\",\n        currentAge: \"\",\n        currentWeight: \"\",\n        currentHeightFt: \"\",\n        currentHeightIn: \"\",\n        currentDiet: \"\",\n        currentExerciseFrequency: \"\",\n        userBMI: \"\",\n        messageBMI: \"\",\n        lifeExpectancy: \"\"\n    };\n\n    componentDidMount() {\n        document.getElementById(\"bmi\").style.display = \"none\";\n    }\n\n    handleInputChange = event => {\n        // Getting the value and name of the input which triggered the change\n        let value = event.target.value;\n        const name = event.target.name;\n\n        // Updating the input's state\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    calculateBMI = (height, weight) => {\n        let { userBMI, messageBMI, lifeExpectancy, currentAge } = this.state;\n        const userDiet = parseInt(this.state.currentDiet);\n        // alert(userDiet);\n        const userExercise = parseInt(this.state.currentExerciseFrequency);\n        console.log(userExercise);\n\n        if (weight > 0 && height > 0 ) {\n            userBMI = (weight / (height / 100 * height / 100)).toFixed(0);\n            lifeExpectancy = 76 + parseInt(userDiet) + parseInt(userExercise);\n            // console.log(lifeExpectancy);\n            if (userBMI < 10) {\n                messageBMI = \"Are you sure this is your height/weight?\"\n                lifeExpectancy = \"?\";\n            }\n            if (userBMI > 10 && userBMI< 18.5) {\n                messageBMI = \"Too thin\"\n                // lifeExpectancy--;\n            } \n            if (userBMI > 18.5 && userBMI < 25) {\n                messageBMI = \"Healthy\"\n                lifeExpectancy++\n            } \n            if (userBMI > 25 && userBMI < 50) {\n                messageBMI = \"Overweight\"\n                lifeExpectancy--;\n            } \n            if (userBMI > 50) {\n                messageBMI = \"Oof\"\n                lifeExpectancy = currentAge\n            }\n\n            // console.log(userBMI)\n            // return userBMI\n        }\n\n        this.setState({\n            userBMI: userBMI,\n            messageBMI: messageBMI,\n            lifeExpectancy: lifeExpectancy\n        })\n    }\n\n    handleFormSubmit = event => {\n        document.getElementById(\"error\").style.display = \"none\";\n\n        let { currentHeight, currentWeight, currentAge, currentExerciseFrequency, currentDiet, userBMI, lifeExpectancy } = this.state;\n\n        const userHeight = (parseInt(this.state.currentHeightFt * 12) + parseInt(this.state.currentHeightIn)) * 2.54;\n        const userWeight = this.state.currentWeight / 2.2;\n        const userDiet = this.state.currentDiet;\n        const userExercise = this.state.currentExerciseFrequency\n        // const errorMessage = document.getElementById(\"error\");\n        // console.log(errorMessage);\n\n        if (isNaN(userHeight && userWeight) || (!userDiet || !userExercise)) {\n            document.getElementById(\"bmi\").style.display = \"none\";\n            document.getElementById(\"error\").style.display = \"block\";\n\n            // alert(\"Form improperly filled out\");\n            document.getElementById(\"error\").innerHTML = (\"Please fill out all fields.\");\n            return\n        }\n\n        event.preventDefault();\n        this.calculateBMI(userHeight, userWeight);\n\n        // if (userBMI > 21 && currentExerciseFrequency === \"1-2 Times a Week\") {\n        //     lifeExpectancy--;\n        // }\n\n        // this.setState({\n        //     lifeExpectancy: \"80\"\n        // });\n\n        document.getElementById(\"bmi\").style.display = \"block\";\n\n    };\n\n    render() {\n        return (\n            <div className=\"pageWrapper\">\n\n                {/* Hello user first name text and sign out anchor */}\n                <HelloUserAndSignOut />\n\n                <div className=\"pageHeader\">Health Timeline</div>\n\n\n                <div className=\"mainContentContainer\">\n\n                    {/* BOOTSTRAP GRID */}\n                    {/* Max width 960px container */}\n                    {/* Put any bootstrap elements into class=\"container\" to set max width to 960px and have it centered on page */}\n                    <Container>\n                        <Row>\n\n                            <Col size=\"col-md-6 offset-md-3\">\n\n                                <Br2 />\n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <p className=\"mainContentTextBlack\">Please fill out all the fields for a life expectancy estimation: </p>\n                                    </Col>\n                                </Row>\n                                <Br />\n                                {/* Subrow (FORM) */}\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <Row>\n                                            <Col size=\"col-md-12\">\n                                                <p>Gender: </p>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col size=\"col-md-12\">\n                                                <label style={{ width: '100%' }}>\n                                                    <select className=\"chosen-select dropDownMenu1\" name=\"gender\" onChange={this.handleInputChange}>\n                                                        <option value=\"null\"></option>\n                                                        <option value=\"F\">Female</option>\n                                                        <option value=\"M\">Male</option>\n                                                    </select>\n                                                </label>\n                                            </Col>\n                                        </Row>\n                                        <Br />\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <Row>\n                                            <Col size=\"col-md-12\">\n                                                <p>Current age: </p>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col size=\"col-md-12\">\n                                                <input\n                                                    className=\"form-control\"\n                                                    value={this.state.currentAge}\n                                                    name=\"currentAge\"\n                                                    onChange={this.handleInputChange}\n                                                    type=\"text\"\n                                                    pattern=\"/d\"\n                                                    maxlength=\"2\"\n                                                    placeholder=\"\"\n                                                    autocomplete=\"off\"\n                                                >\n                                                </input>\n                                            </Col>\n                                        </Row>\n                                        <Br />\n                                        <Br />\n                                        <Row>\n                                            <Col size=\"col-md-12\">\n                                                <p>Current height: </p>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col size=\"col-md-6\">\n                                                {/* <p>Current height (ft): </p> */}\n                                                <input\n                                                    className=\"form-control\"\n                                                    value={this.state.currentHeightFt}\n                                                    name=\"currentHeightFt\"\n                                                    onChange={this.handleInputChange}\n                                                    type=\"text\"\n                                                    pattern=\"\\d\"\n                                                    maxlength=\"1\"\n                                                    placeholder=\"ft\"\n                                                    autocomplete=\"off\"\n                                                >\n                                                </input>\n                                            </Col>\n                                            <Col size=\"col-md-6\">\n                                                {/* <p>Current height (in): </p> */}\n                                                <input\n                                                    className=\"form-control\"\n                                                    value={this.state.currentHeightIn}\n                                                    name=\"currentHeightIn\"\n                                                    onChange={this.handleInputChange}\n                                                    type=\"text\"\n                                                    pattern=\"\\d\"\n                                                    maxlength=\"2\"\n                                                    placeholder=\"in\"\n                                                    autocomplete=\"off\"\n                                                >\n                                                </input>\n                                            </Col>\n                                        </Row>\n                                        <Br />\n                                        <Br />\n                                        <Row>\n                                            <Col size=\"col-md-12\">\n                                                <p>Current weight: </p>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col size=\"col-md-12\">\n                                                {/* <p>Current weight (lb): </p> */}\n                                                <input\n                                                    className=\"form-control\"\n                                                    value={this.state.currentWeight}\n                                                    name=\"currentWeight\"\n                                                    onChange={this.handleInputChange}\n                                                    type=\"text\"\n                                                    pattern=\"\\d\"\n                                                    maxlength=\"3\"\n                                                    placeholder=\"lbs\"\n                                                    autocomplete=\"off\"\n                                                >\n                                                </input>\n                                            </Col>\n                                        </Row>\n                                        <Br />\n                                        <Br />\n                                        <Row>\n                                            <Col size=\"col-md-12\">\n                                                <p>Current dietary habit: </p>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col size=\"col-md-12\">\n                                                <label style={{ width: '100%' }}>\n                                                    <select className=\"chosen-select dropDownMenu1\" name='currentDiet' onChange={this.handleInputChange}>\n                                                        <option value=\"0\"></option>\n                                                        <option value=\"-2\">Poor</option>\n                                                        <option value=\"1\">Average</option>\n                                                        <option value=\"2\">Above Average</option>\n                                                        <option value=\"4\">Ideal</option>\n                                                    </select>\n                                                </label>\n                                            </Col>\n                                        </Row>\n                                        <Br />\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <Row>\n                                            <Col size=\"col-md-12\">\n                                                <p>Current exercise frequency: </p>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col size=\"col-md-12\">\n                                                <label style={{ width: '100%' }}>\n                                                    <select className=\"chosen-select dropDownMenu1\" name=\"currentExerciseFrequency\" onChange={this.handleInputChange}>\n                                                        <option value=\"0\"></option>\n                                                        <option value=\"-2\">Never</option>\n                                                        <option value=\"0\">1-2 Times a Week</option>\n                                                        <option value=\"2\">2-3 Times a week</option>\n                                                        <option value=\"4\">5+ Times a Week</option>\n                                                    </select>\n                                                </label>\n                                            </Col>\n                                        </Row>\n                                        <Br />\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    </Container>\n\n                    <Br />\n\n                    <Container>\n                        <Row>\n                            <Col size=\"col-md-6 offset-md-3\">\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <button className=\"button1\" onClick={this.handleFormSubmit}>Calculate</button>\n                                        <span id=\"error\" className=\"mainContentTextRed\"></span>\n\n                                        <Br />\n                                        <span id=\"bmi\">\n                                            <p> Your stats: <br />\n                                                <div className=\"barWrapper\" style={{ position: 'relative', height: '200px', background: 'lightgray'}}>\n                                                    <div className=\"bar\" style={{ position: 'absolute', bottom: '0', height: \"5px\", width: `${this.state.lifeExpectancy}%`, display: \"block\", background: \"red\" }}>\n                                                        <p style={{ position: 'absolute', bottom: '0', left: '0' }}>0</p>\n                                                        <p style={{ position: 'absolute', bottom: '0', right: '0' }}>{this.state.lifeExpectancy}</p>\n                                                    </div>\n                                                </div>\n                                                BMI: {this.state.userBMI} ({this.state.messageBMI}) Life Expectancy: {this.state.lifeExpectancy}\n                                                <br />\n                                                Gender: {this.state.gender}, Age: {this.state.currentAge} years old,\n                                                Weight: {this.state.currentWeight} lbs, Height: {this.state.currentHeightFt}' {this.state.currentHeightIn}\"<br />\n                                                {/* Current dietary habit: {this.state.currentDiet} <br /> \n                                                Current exercise frequency: {this.state.currentExerciseFrequency} */}\n                                            </p>\n                                        </span>\n                                    </Col>\n                                </Row>\n\n                                {/* Bottom of page line breaks for breathing room */}\n                                <Br />      \n                                <Br />\n                                <Br />\n\n                            </Col>\n                        </Row>\n\n                    </Container>\n\n                </div>\n                <HamburgerMenu />\n\n            </div>\n\n        )\n    }\n\n}\n\nexport default HealthTimeline;","import React from \"react\";\n\nexport function Card({ children }) {\n    return <div className=\"card\">{children}</div>;\n  }","import React from \"react\";\nimport \"./CardWrapper.css\";\n\nexport function CardWrapper({ children }) {\n    return <div className=\"cardWrapper\">{children}</div>;\n  }","import React from \"react\";\nimport \"./HealthCardNavBar.css\";\n\nclass HealthCardNavBar extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <nav>\n                    Emergency Medical ID <i className=\"fas fa-plus-square\"></i>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default HealthCardNavBar;","import React from \"react\";\nimport \"./HealthCardFooter.css\";\n\nclass HealthCardFooter extends React.Component {\n\n    render() {\n        return (\n            <footer>Created by DiaBeatIt</footer>\n        )\n    }\n}\n\nexport default HealthCardFooter;","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport { Card } from \"../components/Card\";\nimport { CardWrapper } from \"../components/CardWrapper\";\nimport Br from \"../components/CustomLineBreak\";\nimport HealthCardNavBar from \"../components/HealthCardNavBar\";\nimport HealthCardFooter from \"../components/HealthCardFooter\";\n\n// Run \"npm start\" to start React app.\n// Run \"npm i\" or \"npm i [specific component name]\" in the command line if there are any dependencies missing in the node modules folder.\n\n// class HealthCardPreview extends React.Component {\n    function HealthCardPreview(props){\n        console.log(props);\n\n    // on load grab all information from health card model\n    // fill in \n\n    return (\n        <div>\n        <CardWrapper>\n            <Card>\n                <HealthCardNavBar />\n                <Container>\n                    <Row>\n                        <Col size=\"col-xs-12 col-sm 12 col-md-6\">\n                            <br/>\n                            <p>Name: {props.name}</p>\n                            <p>DOB: {props.DOB}</p>\n                            <p>Address: {props.address}</p>\n                            <p>Emergency Contact: {props.emergencyContact}</p>\n                            <p>Phone: {props.emergencyContactPhone}</p>\n                            <Br/>\n                            <p>Insurance Provider: {props.healthInsuranceProvider}</p>\n                            <p>Phone: {props.healthInsuranceProviderPhone}</p>\n                            <p>Policy #: {props.policyNo}</p>\n                            <p>Primary Care Physician: {props.primaryCarePhysician}</p>\n                            <p>Phone: {props.primaryCarePhysicianPhone}</p>\n                        </Col>\n                        <Col size=\"col-xs-12 col-sm 12 col-md-6\">\n                            <br/>\n                            <p>Known Conditions: {props.knownConditions ? props.knownConditions : 'N/A'}</p>\n                            <p>Known Allergens: {props.knownAllergens ? props.knownAllergens : 'N/A'}</p>\n                            <p>Medications: {props.medications ? props.medications : 'N/A'}</p>\n                            <Br/>\n                            <Br/>\n                            <Br/>\n                            <Br/>\n                            <Br/>\n                            <p>Blood Type: {props.bloodType === \"0\" ? \" \" : props.bloodType}</p>\n                            <p>Organ Donor: <i style={{color: 'red'}} className={props.organDonor === \"Yes\" ? \"fas fa-heart\" : \"blank\"}></i></p>\n                            <p>DNR: {props.doNotResuscitate === \"0\" ? \" \" : props.doNotResuscitate}</p>\n                        </Col>\n                    </Row>\n                </Container>\n                <div className=\"flex-container d-flex justify-content-end\">\n                    <HealthCardFooter/>\n                </div>\n            </Card>\n        </CardWrapper>\n        </div>\n    )\n\n    \n}\nexport default HealthCardPreview;\n","import React, { Component } from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport HealthCardPreview from \"./HealthCardPreview\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport HamburgerMenu from \"../components/HamburgerMenu\";\nimport Br from \"../components/CustomLineBreak\";\nimport Br2 from \"../components/CustomLineBreak2\";\nimport \"../components/Buttons/buttons.css\";\nimport \"../components/Text/text.css\";\nimport HelloUserAndSignOut from \"../components/HelloUserAndSignOut\";\nimport \"../components/PageWrapper/pageWrapper.css\";\nimport \"../components/MainContentContainer/mainContentContainer.css\";\nimport \"../components/InputAndSelectField/inputAndSelectField.css\";\nimport API from \"../utils/API\";\n\n// Run \"npm start\" to start React app.\n// Run \"npm i\" or \"npm i [specific component name]\" in the command line if there are any dependencies missing in the node modules folder.\n\nvar userName = localStorage.getItem(\"username\");\n\nclass HealthCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            didSubmit: \"No\",\n            username: userName,\n            contactname: \"james bond\",\n            contactphone: \"007\",\n            primarycarephysician: \"dr. no\",\n            medicalconditions: \"killer\",\n            medication: \"diamonds\",\n            allergies: \"bad guys\",\n            bloodtype: \"gold\",\n            resuscitate: 0,\n            organdonor: 0\n        };\n    }\n\n    saveHealthCard = () => {\n        console.log(\"Save!\");\n    }\n\n    componentDidMount() {\n        \n    }\n    previewHealthCard = () => {\n        // console.log(\"Print!\");\n        let name = document.getElementById(\"healthCardPage-fullName\").value;\n        let DOB = document.getElementById(\"healthCardPage-DOB\").value;\n        let address = document.getElementById(\"healthCardPage-address\").value;\n        let emergencyContact = document.getElementById(\"healthCardPage-emergencyContactName\").value;\n        let emergencyContactPhone = document.getElementById(\"healthCardPage-emergencyContactPhone\").value;\n        let primaryCarePhysician = document.getElementById(\"healthCardPage-primaryCarePhysician\").value;\n        let primaryCarePhysicianPhone = document.getElementById(\"healthCardPage-primaryCarePhysicianPhoneNumber\").value;\n        let healthInsuranceProvider = document.getElementById(\"healthCardPage-healthInsuranceProvider\").value;\n        let policyNo = document.getElementById(\"healthCardPage-policyNo\").value;\n        let knownAllergens = document.getElementById(\"healthCardPage-knownAllergens\").value;\n        let medications = document.getElementById(\"healthCardPage-medication\").value;\n        let knownConditions = document.getElementById(\"healthCardPage-medicalConditions\").value;\n        let bloodType= document.getElementById(\"healthCardPage-bloodType\").value;\n        let organDonor = document.getElementById(\"healthCardPage-organDonor\").value;\n        let doNotResuscitate = document.getElementById(\"healthCardPage-doNotResuscitate\").value;\n        // // Updating the input's state\n        this.setState({\n            name: name,\n            DOB: DOB,\n            address: address,\n            emergencyContact: emergencyContact,\n            emergencyContactPhone: emergencyContactPhone,\n            primaryCarePhysician: primaryCarePhysician,\n            primaryCarePhysicianPhone: primaryCarePhysicianPhone,\n            healthInsuranceProvider: healthInsuranceProvider,\n            policyNo: policyNo,\n            knownAllergens: knownAllergens,\n            medications: medications,\n            knownConditions: knownConditions,\n            bloodType: bloodType,\n            organDonor: organDonor,\n            doNotResuscitate: doNotResuscitate, \n            showPreview: true\n        });\n\n    }\n    \n    render() {\n        if (this.state.showPreview) {\n            return (\n            \n                <div style={{height: '100vh', width:'100vw'}}>\n            \n                    <HealthCardPreview \n                    name={this.state.name}\n                    DOB={this.state.DOB}\n                    address={this.state.address}\n                    emergencyContact={this.state.emergencyContact}\n                    emergencyContactPhone={this.state.emergencyContactPhone}\n                    primaryCarePhysician={this.state.primaryCarePhysician}\n                    primaryCarePhysicianPhone={this.state.primaryCarePhysicianPhone}\n                    healthInsuranceProvider={this.state.healthInsuranceProvider}\n                    policyNo={this.state.policyNo}\n                    knownAllergens={this.state.knownAllergens}\n                    medications={this.state.medications}\n                    knownConditions={this.state.knownConditions}\n                    bloodType={this.state.bloodType}\n                    organDonor={this.state.organDonor}\n                    doNotResuscitate={this.state.doNotResuscitate}\n                    />\n                    <Container> \n                        {/* <Row>\n                            <Col> */}\n                                <Row>\n                                    <Col size=\"col-md-3\"></Col>\n                                    <Col size=\"col-md-6\">\n                                        <button className=\"button1\" id=\"healthCardPage-preview\" onClick={() => this.setState({showPreview: false})}>Close Preview</button>\n                                        <div className=\"mainContentTextRed\" id=\"calorieEntryPage-errorMessage\"></div>\n                                    </Col>\n                                    <Col size=\"col-md-3\"></Col>\n                                </Row>\n                            {/* </Col>\n                        </Row> */}\n                    </Container>\n            <HamburgerMenu />\n\n                </div>\n            )\n        }\n        return(\n        <div>\n\n            {/* ---------------------------------------- */}\n            {/* MAIN CONTENT OF PAGE */}\n\n            {/* Page Wrapper */}\n            <div className=\"pageWrapper\">\n                \n                {/* Hello user first name text and sign out anchor */}\n                <HelloUserAndSignOut />\n\n                {/* Page header */}\n                <div className=\"pageHeader\">Digital Health Card</div>\n            \n                {/* Main content container */}\n                <div className=\"mainContentContainer\">\n\n                    {/* BOOTSTRAP GRID */}\n                    {/* Max width 960px container */}\n                    {/* Put any bootstrap elements into class=\"container\" to set max width to 960px and have it centered on page */}\n                    <Container>         \n                        \n                        {/* Calorie entry form */}\n                        <Row>\n\n                            <Col size=\"col-md-6 offset-md-3\">           \n\n                                <Br2 />\n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <p className=\"mainContentTextBlack\">This information can be printed and kept in your wallet for reference in case of an emergency:</p>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n\n                                {/* ------------------------------ */}\n                                {/* Subrow (FORM) */}\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <p className=\"mainContentTextBlack\">Full name:</p>\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <input type=\"text\" className=\"form-control\" id=\"healthCardPage-fullName\" placeholder=\"\" autoComplete=\"off\" maxlength=\"20\" value={this.state.username}></input>   \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">DOB:</p>\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <input type=\"text\" className=\"form-control\" id=\"healthCardPage-DOB\" placeholder=\"\" autoComplete=\"off\" maxlength=\"10\"></input>   \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">Address:</p>\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <input type=\"text\" className=\"form-control\" id=\"healthCardPage-address\" placeholder=\"\" autoComplete=\"off\" maxlength=\"30\"></input>   \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">Emergency contact name:</p>\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <input type=\"text\" className=\"form-control\" id=\"healthCardPage-emergencyContactName\" placeholder=\"\" autoComplete=\"off\" maxlength=\"20\"></input>   \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">Emergency contact phone number:</p>\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <input type=\"text\" pattern=\"/d\" className=\"form-control\" id=\"healthCardPage-emergencyContactPhone\" placeholder=\"\" autoComplete=\"off\" maxlength=\"10\"></input>   \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">Health Insurance Provider:</p>\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <input type=\"text\" className=\"form-control\" id=\"healthCardPage-healthInsuranceProvider\" placeholder=\"\" autoComplete=\"off\" maxlength=\"30\"></input>   \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">Policy No:</p>\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <input type=\"text\" pattern=\"/d\" className=\"form-control\" id=\"healthCardPage-policyNo\" placeholder=\"\" autoComplete=\"off\" maxlength=\"10\"></input>   \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">Primary care physician:</p>\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <input type=\"text\" className=\"form-control\" id=\"healthCardPage-primaryCarePhysician\" placeholder=\"\" autoComplete=\"off\" maxlength=\"20\"></input>   \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">Primary care physician phone number:</p>\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <input type=\"text\" pattern=\"/d\" className=\"form-control\" id=\"healthCardPage-primaryCarePhysicianPhoneNumber\" placeholder=\"\" autoComplete=\"off\" maxlength=\"10\"></input>   \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">Medical conditions:</p>\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <textarea className=\"form-control\" id=\"healthCardPage-medicalConditions\" placeholder=\"\" rows=\"4\" autoComplete=\"off\" maxlength=\"30\"></textarea>     \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">Medications:</p>\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <textarea className=\"form-control\" id=\"healthCardPage-medication\" placeholder=\"\" rows=\"4\" autoComplete=\"off\" maxlength=\"30\"></textarea> \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">Known allergies:</p>\n                                        <Br2 />\n                                        <Br2 />\n                                        <Br2 />\n                                        <textarea className=\"form-control\" id=\"healthCardPage-knownAllergens\" placeholder=\"\" rows=\"4\" autoComplete=\"off\" maxlength=\"30\"></textarea>    \n                                        {/* autoComplete=\"off\" is used to turn off the autoComplete of input field */}\n                                        <Br />\n                                        <Br />\n\n                                        <p className=\"mainContentTextBlack\">Blood type:</p>\n                                        <select className=\"chosen-select dropDownMenu1\" id=\"healthCardPage-bloodType\">\n                                            {/* IN ALPHABETICAL ORDER */}\n                                            <option value=\"0\"></option>\n                                            <option value=\"A-positive\">A-positive</option>\n                                            <option value=\"A-negative\">A-negative</option>\n                                            <option value=\"B-positive\">B-positive</option>\n                                            <option value=\"B-negative\">B-negative</option>\n                                            <option value=\"AB-positive\">AB-positive</option>\n                                            <option value=\"AB-negative\">AB-negative</option>\n                                            <option value=\"O-positive\">O-positive</option>\n                                            <option value=\"O-negative\">O-negative</option>\n                                        </select>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                <Br />\n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-4\">\n                                        <p className=\"mainContentTextBlack\">Do not resuscitate:</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-12\">\n                                        <select className=\"chosen-select dropDownMenu1\" id=\"healthCardPage-doNotResuscitate\">\n                                            {/* IN ALPHABETICAL ORDER */}\n                                            <option value=\"0\"></option>\n                                            <option value=\"Yes\">Yes</option>\n                                            <option value=\"No\">No</option>\n                                        </select> \n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                <Br />\n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-4\">\n                                        <p className=\"mainContentTextBlack\">Organ donor:</p>\n                                    </Col>\n\n                                    <Col size=\"col-md-12\">\n                                        <select className=\"chosen-select dropDownMenu1\" id=\"healthCardPage-organDonor\">\n                                            {/* IN ALPHABETICAL ORDER */}\n                                            <option value=\"0\"></option>\n                                            <option value=\"Yes\">Yes</option>\n                                            <option value=\"No\">No</option>\n                                        </select> \n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                <Br />\n\n                                {/* ------------------------------ */}\n                                {/* Subrow (SAVE) */}\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <button className=\"button1\" id=\"healthCardPage-save\" onClick={this.saveHealthCard}>Save</button>\n                                        <div className=\"mainContentTextRed\" id=\"calorieEntryPage-errorMessage\"></div>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n\n                                {/* ------------------------------ */}\n                                {/* Subrow (PRINT) */}\n                                <Row>\n                                <Col size=\"col-md-12\">\n                                <button className=\"button1\" id=\"healthCardPage-save\" onClick={this.previewHealthCard}>Preview</button>\n                                        \n                                        {/* <button className=\"button1\" id=\"healthCardPage-save\" onClick={() => this.setState({showPreview: true})}>Preview</button> */}\n                                        <div className=\"mainContentTextRed\" id=\"calorieEntryPage-errorMessage\"></div>\n                                    </Col>\n                                {/* <Link to=\"/Preview\" role=\"button\" className=\"button1\">\n                                Preview\n                                </Link>{\" \"}\n \n                                <Route exact path=\"/Preview\" component={HealthCardPreview} />\n                                    <Col size=\"col-md-12\">\n                                        <button className=\"button1\" id=\"healthCardPage-print\" onClick={this.previewHealthCard}>Preview</button>\n                                        <Route exact path=\"Preview\" component={HealthCardPreview} />\n                                    </Col> */}\n                                </Row> \n\n                                <Br />\n                                <Br />\n                                <Br />\n                                \n                            </Col>\n\n                        </Row>\n\n                    </Container>\n\n                </div>\n\n            </div>\n\n\n            {/* ---------------------------------------- */}\n            {/* HAMBURGER MENU */}\n\n            <HamburgerMenu />\n\n        </div>\n        )\n    }\n}\n\nexport default HealthCard;","import React, { Component } from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n} from 'reactstrap';\n\nconst items = [\n  {\n    src: \"./assets/images/Resources_Images/diaImg/preIMg6.jpg\",\n    altText: 'Slide 1',\n  },\n  {\n    src: \"./assets/images/Resources_Images/diaImg/preIMg5.jpg\",\n    altText: 'Slide 2',\n  },\n  {\n    src:\"./assets/images/Resources_Images/diaImg/preIMg2.png\" ,\n    altText: 'Slide 3',\n  },\n  {\n    src:\"./assets/images/Resources_Images/diaImg/preIMg9.jpg\" ,\n    altText: 'Slide 4',\n  \n  }\n];\n\nclass ImgCarousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeIndex: 0 };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onExiting() {\n    this.animating = true;\n  }\n\n  onExited() {\n    this.animating = false;\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n\n    const slides = items.map((item) => {\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={item.src}\n        >\n          <img src={item.src}  alt={item.altText} className=\"carouselImg\" />\n        </CarouselItem>\n      );\n    });\n\n    return (\n      <Carousel\n        activeIndex={activeIndex}\n        next={this.next}\n        previous={this.previous}\n      >\n        <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\n        {slides}\n        <CarouselControl className=\"arrowColor\" direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\n        <CarouselControl className=\"arrowColor\" direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\n      </Carousel>\n    );\n  }\n}\n\n\nexport default ImgCarousel;","import React, { Component } from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\nimport \"./Resources.css\";\n\nconst items = [\n  {\n    src:\"./assets/images/Resources_Images/diaImg/dia-image1.jpg\" ,\n    altText: 'Slide 6',\n  },\n  {\n    src: \"./assets/images/Resources_Images/diaImg/dia1.jpg\",\n    altText: 'Slide 1',\n  },\n  {\n    src: \"./assets/images/Resources_Images/diaImg/dia2.jpg\",\n    altText: 'Slide 2',\n  },\n  {\n    src:\"./assets/images/Resources_Images/diaImg/dia3.jpg\" ,\n    altText: 'Slide 3',\n  },\n  {\n    src:\"./assets/images/Resources_Images/diaImg/dia4.jpg\" ,\n    altText: 'Slide 4',\n  },\n  {\n    src:\"./assets/images/Resources_Images/diaImg/dia5.jpg\" ,\n    altText: 'Slide 5',\n  }\n];\n\nclass ImgCarousel1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeIndex: 0 };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onExiting() {\n    this.animating = true;\n  }\n\n  onExited() {\n    this.animating = false;\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === items.length - 1 ? 0 : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === 0 ? items.length - 1 : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n\n    const slides = items.map((item) => {\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={item.src}\n          className=\"carouselZIndex\"\n        >\n          <img src={item.src} alt={item.altText} className=\"carouselImg\" />\n          <CarouselCaption captionText={item.caption} captionHeader={item.caption} />\n        </CarouselItem>\n      );\n    });\n\n    return (\n      <Carousel\n        activeIndex={activeIndex}\n        next={this.next}\n        previous={this.previous}\n        className=\"carouselZIndex\"\n      >\n        <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={this.goToIndex} />\n        {slides}\n        <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={this.previous} />\n        <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={this.next} />\n      </Carousel>\n    );\n  }\n}\n\n\nexport default ImgCarousel1;","\nexport const diaTypes = \n[{\n\"header\": \"Type 1\",\n\"description\": \" Type 1 diabetes, previously called insulin-dependent diabetes mellitus (IDDM) or juvenileonset diabetes, may account for 5 to 10 percent of all diagnosed cases of diabetes. Risk factors are less well defined for Type 1 diabetes than for Type 2 diabetes, but autoimmune, genetic and environmental factors are involved in the development of this type of diabetes.\",\n},\n{\n\"header\": \"Type 2\",\n\"description\": \"Type 2 diabetes, previously called non-insulin-dependent diabetes mellitus (NIDDM) or adult-onset diabetes, may account for 90 to 95 percent of all diagnosed cases of diabetes. Risk factors for Type 2 diabetes include older age, obesity, family history of diabetes, prior history of gestational diabetes, impaired glucose tolerance, physical inactivity, and race/ethnicity. African Americans, Hispanic/Latino Americans, American Indians, some Asian Americans and Pacific Islanders are at particularly high risk for Type 2 diabetes.\",\n\n}\n]\n        \n\nexport const preWay =[\n    {\n        \"title\":\"Cut sugar and refined carbs from your diet\",\n        \"description\":\" Eating foods high in refined carbs and sugar increases blood sugar and insulin levels, which may lead to diabetes over time. Avoiding these foods may help reduce your risk.\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/preIMg1.jpg\"\n    },\n    {\n        \"title\":\"Work out regularly\",\n        \"description\":\"Performing physical activity on a regular basis can increase insulin secretion and sensitivity, which may help prevent the progression from prediabetes to diabetes.\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/preIMg2.png\"\n    },\n    {\n        \"title\":\"Drink water as your primary beverage\",\n        \"description\":\" Drinking water instead of other beverages may help control blood sugar and insulin levels, thereby reducing the risk of diabetes.\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/preIMg3.jpg\"\n    },\n\n    {\n        \"title\":\"Quit smoking\",\n        \"description\":\"Smoking is strongly linked to the risk of diabetes, especially in heavy smokers. Quitting has been shown to reduce this risk over time.\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/preIMg5.jpg\"\n    },\n    {\n        \"title\":\"Follow a very low-carb diet\",\n        \"description\":\"Following a ketogenic or very low-carb diet can help keep blood sugar and insulin levels under control, which may protect against diabetes.\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/preIMg6.jpg\"\n    },\n    {\n        \"title\":\"Watch portion sizes\",\n        \"description\":\"Avoiding large portion sizes can help reduce insulin and blood sugar levels and decrease the risk of diabetes.\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/preIMg7.jpg\"\n    },\n    {\n        \"title\":\"Avoid sedentary behaviors\",\n        \"description\":\"Avoiding sedentary behaviors like excessive sitting has been shown to reduce your risk of getting diabetes.\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/preIMg8.jpg\"\n    },\n    {\n        \"title\":\"Optimize vitamin D levels\",\n        \"description\":\"Consuming foods high in vitamin D or taking supplements can help optimize vitamin D blood levels, which can reduce your risk of diabetes.\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/preIMg10.jpg\"\n    },\n\n    {\n        \"title\":\"Eat a high-fiber diet\",\n        \"description\":\"Consuming a good fiber source at each meal can help prevent spikes in blood sugar and insulin levels, which may help reduce your risk of developing diabetes.\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/preIMg9.jpg\"\n    },\n    {\n        \"title\":\"Lose weight if you are overweight or obese\",\n        \"description\":\"Carrying excess weight, particularly in the abdominal area, increases the likelihood of developing diabetes. Losing weight may significantly reduce the risk of diabetes.\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/preIMg4.jpg\"\n    },\n\n\n]\n\nexport const Symptoms =[\n    {\n       \"symptom\": \"Frequent urination\",\n       \"img\":\"./assets/images/Resources_Images/diaImg/sym1.jpg\"\n    },\n    {\n        \"symptom\": \"Excessive thirst\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/sym2.jpg\"\n     },\n     {\n        \"symptom\": \"Unexplained weight loss\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/sym3.jpg\"\n     },\n     {\n        \"symptom\": \"Extreme hunger\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/sym4.jpg\"\n     },\n     {\n        \"symptom\": \"Sudden vision changes\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/sym5.jpg\"\n     },\n     {\n        \"symptom\": \"Tingling or numbness in hands or feet\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/sym6.jpg\"\n     },\n     {\n        \"symptom\": \"Feeling very tired much of the time\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/sym7.jpg\"\n     },\n     {\n        \"symptom\": \"Very dry skin\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/sym8.jpg\"\n     },\n     {\n        \"symptom\": \"More infections than usual\",\n        \"img\":\"./assets/images/Resources_Images/diaImg/sym9.jpg\"\n     },\n\n]","import React from 'react'\nimport {\n    Card, CardText, CardBody, Container, CardTitle,\n} from 'reactstrap';\nimport ImgCarousel from './ImgCarousel';\nimport ImgCarousel1 from './ImgCarousel1';\nimport { diaTypes, preWay, Symptoms } from './diabetesData';\nimport \"../Text/text.css\";\n// import { types } from '@babel/core';\n\nconst Resource = (props) => {\n    return (\n        <Container>\n\n            {/* introduction card */}\n            <Card className=\"firstCard mb-5\">\n                <CardBody>\n                    <CardTitle className=\"mb-5\">\n                        <h2 className=\"cardTitle\">What is diabetes?</h2>\n                    </CardTitle>\n                    {/* <ImgCarousel1 /> */}\n                    <CardText className=\"text-left mt-4 mainContentTextBlack\">Diabetes is the condition in which the body does not properly process food for use as energy.\n                    Most of the food we eat is turned into glucose or sugar for our bodies to use as energy. The\n                    pancreas, an organ that lies near the stomach, makes a hormone called insulin to help\n                    glucose get into the cells of our bodies. When you have diabetes, your body either does not\n                    make enough insulin or cannot use its own insulin as well as it should. This causes sugars to\n                    build up in your blood. Diabetes can cause serious health complications including heart disease, blindness, kidney\n                    failure, and lower-extremity amputations. Diabetes is the seventh leading cause of death in\n                    the United States.\n                    </CardText>\n                    <br></br>\n                </CardBody>\n            </Card>\n\n            {/* symptoms of diabetes */}\n            <Card className=\"firstCard mb-5\">\n                <CardBody>\n                    <CardTitle className=\"mb-5\">\n                        <h2 className=\"cardTitle\">Symptoms of diabetes</h2>\n                    </CardTitle>\n                    <ul className=\"unorderedList\">\n                        {Symptoms.map((sym) => {\n                            return (\n                                <li className=\"list-item d-inline-flex col-md-4\" key={sym.symptom}>\n                                    <div className=\"list-content mainContentTextBlack\">\n                                        <img className=\"rounded-circle\"\n                                            src={sym.img}\n                                            // style={{ width: \"100%\", }}\n                                            alt={sym.symptom} />\n                                            <br></br>\n                                        <p className=\"symptomsSubText\">{sym.symptom}</p>\n                                        <br></br>\n                                        <br></br>\n                                    </div>\n                                </li>\n                            )\n                        })\n                        }\n                    </ul>\n                </CardBody>\n            </Card>\n\n            {/* types of diabetes */}\n            {diaTypes.map((dataType) => {\n                return (\n                    <Card className=\"firstCard mb-5\">\n                        <CardBody>\n                            <CardTitle className=\"cardTitle\">\n                                <span>{dataType.header}</span>\n                            </CardTitle>\n                            <CardText className=\"text-left p-4 mainContentTextBlack\">\n                                {dataType.description}\n                            </CardText>\n                        </CardBody>\n                    </Card>\n                )\n            })}\n            \n            {/* care image carousel */}\n            {/* <ImgCarousel /> */}\n\n            {/* self caring with picture */}\n            <Card className=\"firstCard mb-5\">\n                <CardBody>\n                    <CardTitle className=\"mb-5\">\n                        <h2 className=\"cardTitle\">How to prevent becoming diabetic</h2>\n                    </CardTitle>\n                    <ul className=\"list p-0\">\n                        {preWay.map((prevention) => {\n                            const image = prevention.img\n                            return (\n                                <li className=\"list-item d-inline-flex col-md-6\" key={prevention.title}>\n                                    <div className=\"list-content\">\n                                        <span className=\"cardTitle2\">{prevention.title}</span>\n                                        <img class=\"preventionImage\" src={image} alt={prevention.title} />\n                                        <br></br>\n                                        <br></br>\n                                        <p className='text-left mainContentTextBlack'>{prevention.description}</p>\n                                        <br></br>\n                                        <br></br>\n                                    </div>\n                                </li>\n                            )\n                        })\n                        }\n                    </ul>\n                </CardBody>\n            </Card>\n\n        </Container>\n    );\n};\n\nexport default Resource;","import React from 'react';\nimport '../components/Resources/Resources.css';\nimport Resource from '../components/Resources/Resources'\nimport  'bootstrap/dist/css/bootstrap.min.css'\nimport HamburgerMenu from \"../components/HamburgerMenu\";\nimport Br from \"../components/CustomLineBreak\";\nimport Br2 from \"../components/CustomLineBreak2\";\nimport \"../components/Buttons/buttons.css\";\nimport \"../components/Text/text.css\";\nimport HelloUserAndSignOut from \"../components/HelloUserAndSignOut\";\nimport \"../components/PageWrapper/pageWrapper.css\";\nimport \"../components/MainContentContainer/mainContentContainer.css\";\nimport \"../components/InputAndSelectField/inputAndSelectField.css\";\n\n// Run \"npm start\" to start React app.\n// Run \"npm i\" or \"npm i [specific component name]\" in the command line if there are any dependencies missing in the node modules folder.\n\nfunction Resources() {\n  return (\n    <div>\n\n      {/* ---------------------------------------- */}\n      {/* MAIN CONTENT OF PAGE */}\n\n      {/* Page Wrapper */}\n      <div className=\"pageWrapper\">\n\n          {/* Hello user first name text and sign out anchor */}\n          <HelloUserAndSignOut />\n\n          {/* Page header */}\n          <div className=\"pageHeader\">Resources</div>\n      \n          {/* Main content container */}\n          <div className=\"mainContentContainer\">\n          \n            <div className=\"App\">    \n              <Resource/>\n            </div>\n\n          </div>\n\n      </div>\n\n\n      {/* ---------------------------------------- */}\n      {/* HAMBURGER MENU */}\n\n      <HamburgerMenu />\n\n    </div>\n  );\n}\n\nexport default Resources;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport HamburgerMenu from \"../components/HamburgerMenu\";\nimport Br from \"../components/CustomLineBreak\";\nimport \"../components/Buttons/buttons.css\";\nimport \"../components/Text/text.css\";\nimport HelloUserAndSignOut from \"../components/HelloUserAndSignOut\";\nimport \"../components/InputAndSelectField/inputAndSelectField.css\";\nimport \"../components/PageWrapper/pageWrapper.css\";\nimport \"../components/MainContentContainer/mainContentContainer.css\";\n\n// Run \"npm start\" to start React app.\n// Run \"npm i\" or \"npm i [specific component name]\" in the command line if there are any dependencies missing in the node modules folder.\n\nclass Contact extends React.Component {\n  \n    render() {\n        return(\n        <div>\n\n            {/* ---------------------------------------- */}\n            {/* MAIN CONTENT OF PAGE */}\n\n            {/* Page Wrapper */}\n            <div className=\"pageWrapper\">\n\n                {/* Hello user first name text and sign out anchor */}\n                <HelloUserAndSignOut />\n\n                {/* Page header */}\n                <div className=\"pageHeader\">Contact</div>\n            \n                {/* Main content container */}\n                <div className=\"mainContentContainer\">\n\n                    {/* BOOTSTRAP GRID */}\n                    {/* Max width 960px container */}\n                    {/* Put any bootstrap elements into class=\"container\" to set max width to 960px and have it centered on page */}\n                    <Container>         \n                        \n                        {/* Calorie data retrieval */}\n                        <Row>\n\n                            <Col size=\"col-md-6 offset-md-3\">           \n\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-12\">\n                                        <br></br>\n                                        <p className=\"contactTextBlackCentered\">To get in touch with Team DiaBeatIt, please email:\n                                        <br></br>\n                                        <br></br>\n                                        <a className=\"contactAnchor\" href=\"mailto:team.diabeatit@gmail.com\">team.diabeatit@gmail.com</a>\n                                        </p>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                <Br />\n\n                                {/* ------------------------------ */}\n                                {/* Subrow */}\n                                <Row>\n                                    <Col size=\"col-md-12\">                               \n                                        {/* Datepicker */}\n                                        <p className=\"mainContentTextBlack\">Please note that whilte this app aims to HELP prevent diabetes, the app itself does not prevent diabetes.\n                                        </p>\n                                    </Col>\n                                </Row> \n\n                                <Br />\n                                <Br />\n                                <Br />\n                                \n                            </Col>\n\n                        </Row>\n\n                    </Container>\n\n                </div>\n\n            </div>\n\n\n            {/* ---------------------------------------- */}\n            {/* HAMBURGER MENU */}\n\n            <HamburgerMenu />\n\n        </div>\n        )\n    }\n}\n\nexport default Contact;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Splash from \"./pages/Splash\";\nimport MainMenu from \"./pages/MainMenu\";\nimport CalorieEntry from \"./pages/CalorieEntry\";\nimport CalorieEntryEdit from \"./pages/CalorieEntryEdit\";\nimport CalorieData from \"./pages/CalorieData\";\nimport StoreFinder from \"./pages/StoreFinder\";\nimport RecipeFinder from \"./pages/RecipeFinder\";\nimport HealthTimeline from \"./pages/HealthTimeline\";\nimport HealthCard from \"./pages/HealthCard\";\nimport Resources from \"./pages/Resources\";\nimport Contact from \"./pages/Contact\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Splash} />\n          <Route exact path=\"/MainMenu\" component={MainMenu} />\n          <Route exact path=\"/CalorieEntry\" component={CalorieEntry} />\n          <Route exact path=\"/CalorieEntryEdit\" component={CalorieEntryEdit} />\n          <Route exact path=\"/CalorieData\" component={CalorieData} />\n          <Route exact path=\"/StoreFinder\" component={StoreFinder} />\n          <Route exact path=\"/RecipeFinder\" component={RecipeFinder} />\n          <Route exact path=\"/HealthTimeline\" component={HealthTimeline} />\n          <Route exact path=\"/HealthCard\" component={HealthCard} />\n          <Route exact path=\"/Resources\" component={Resources} />\n          <Route exact path=\"/Contact\" component={Contact} />\n          {/* <Route exact path=\"/anotherpage/:id\" component={AnotherPage} /> */}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n//  render={() => (<CalorieEntryEdit calorieData={\"Hello There\"}/>)}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}